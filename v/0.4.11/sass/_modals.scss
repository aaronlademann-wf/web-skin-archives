//----------------------------------------------------

//+  PARTIAL:  _modals.scss
//+  PARENT:   wdesk.scss

    // related partials:
    //+ "_dialogs.scss"
    //+ "_alerts.scss"

//----------------------------------------------------

// .modal-open            - body class for killing the scroll
// .modal                 - container to scroll within
// .modal-dialog          - positioning shell for the actual modal
// .modal-content         - actual modal w/ bg and corners and shit

//
// MODAL SCAFFOLDING
//
    body.modal-open {
        // Kill the scroll on the body
        overflow: hidden;

        // adjust z-index of elements within the modal
        .modal {
            .dropdown-menu {    z-index: $zindexDropdown + $zindexModal; }
            .dropdown.open {    @include ltie8 { *z-index: $zindexDropdown + $zindexModal; } }
            .popover       {    z-index: $zindexPopover  + $zindexModal; }
            .tooltip       {    z-index: $zindexTooltip  + $zindexModal; }
        }
    }

    // Container that the modal scrolls within
    .modal {
        position: fixed;
        z-index: $zindexModalBackdrop;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: none;
        overflow: auto;
        overflow-y: auto;
        @if $webkit-support {
            -webkit-overflow-scrolling: touch;
        }
        @if $ie-support {
            //
            // in order for MSIE to be able to be bound to a click event,
            // the element has to have either a bg color, or a bg image.
            //
            // https://github.com/WebFilings/web-skin/issues/635
            //
            background: image-url("invisible.gif") repeat;
        }

        // Slide entry option for modals
        &.slide {
            .modal-dialog {
                @include transition(#{opacity $dialogFadeTiming linear, top $dialogFadeTiming ease-out});
                top: -25%;
            }

            &.in {
                .modal-dialog {
                    top: 0;
                }
            }

            &.up {
                &.out {
                    .modal-dialog {
                        top: auto;
                        bottom: -25%;
                    }
                }
                &.in  {
                    .modal-dialog {
                        top: auto;
                        bottom: 0;
                    }
                }
            }
        }
    }

    // Shell div to position the modal with bottom padding
    .modal-dialog {
        position: absolute;
        z-index: $zindexModal;
        top: 0;
        right: 0;
        left: 0;
        width: auto;
        padding: $modalDialogOffset; // how far off the edge of the screen should the max width be?
        padding-bottom: 0; // don't force a scroll if we can still see the whole thing
    }

    // Actual modal
    .modal-content {
        padding: $dialogBdWidth;
        position: relative;
        background-color: $dialogBg;
        border: $dialogBdWidth solid $dialogBdColor;
        border-radius: $dialogBdRadius;
        // Remove focus outline from opened modal
        outline: none;
        @include box-shadow(#{$dialogShadow});
        @include background-clip(padding-box);
    }

    // Modal background
    .modal-backdrop {
        z-index: $zindexModalBackdrop - 1;
        background-color: $dialogBackdropBg;
        // Fade for backdrop
        .fade &,
        &.fade {
            @include opacity(0);
        }
        .fade.in &,
        &.fade.in {
            @include opacity($dialogBackdropAlpha);
            &.opaque {
                @include opacity(1); // used for "security" screen bgs
            }
        }
    }


//
// MODAL HEADER
//
    // Top section of the modal w/ title and dismiss
    .modal-header {
        position: relative;
        z-index: 2; // keep above modal-body
        width: 100%;
        padding: 0 $dialogHeaderPadding;
    }

    // Title text within header
    .modal-title {
        @include textOverflow;
        width: 100%;
        margin: 0;
        padding: $dialogHeaderPadding 0 ($dialogHeaderPadding - 1);
        border-bottom: $modalTitleBdWidth solid $modalTitleBdColor;
        font-size: $dialogHeaderFontSize;
        line-height: $dialogHeaderLineHeight;

        &:empty { display: none; }
    }

    // Close icon
    .modal-header .close {
        position: absolute;
        top: 0;
        right: 0;
        padding: $dialogHeaderPadding;
        font-size: round($dialogHeaderMinHeight / 2); // make sure it doesn't look like its drowning
        line-height: $dialogHeaderLineHeight;
    }


//
// MODAL BODY
//
    // Where all modal content resides (sibling of .modal-header and .modal-footer)
    .modal-body {
        position: relative;
        z-index: 1; // keep below modal-header
        max-height: 100%;
        padding: $modalInnerPadding 0;
        font-family: $fontFamilyBase;

        &:empty { display: none; }

        // each block of content should be wrapped in one of these
        // we do this instead of putting the padding on the .modal-body
        // because we want certain elements to be able to flow all the way to the edge
        .body-content {
            padding: $modalInnerPadding $modalBodyContentPaddingHorizontal;
            margin-bottom: 0; // override global .body-content
            &.flush {
                padding: $modalInnerPadding;
            }

            // first and last body-content elems dont need extra pad b/c modal-body has some
            &:first-of-type { padding-top: 0; }
            &:last-of-type  { padding-bottom: 0; }
            &:only-of-type  { padding-top: 0; padding-bottom: 0; }

            > p {
                margin: 0;
                + p { margin-bottom: $lineHeightBasePx / 2; }
            }
            > #{comma-list($headings)} {
                &:first-child {
                    margin-top: 0;
                }
            }

            // redo heading sizes for modals
            $n: 1 !global;
            @each $heading in $headings {
                $fontSize: nth($headingFontSizes, $n);

                @if $fontSize >= $dialogHeaderFontSize {
                    #{$heading} {
                        margin-bottom: $dialogContentPadding;
                        font-size: $dialogHeaderFontSize;
                        line-height: $dialogHeaderLineHeight;
                    }
                }

                $n: $n + 1 !global;
            }
        } // END .modal-body .body-content
    } // END .modal-body

    .modal-header + .modal-body {
        // little more top padding to keep the header spaced properly
        padding-top: $modalBodyFirstPaddingTop;
    }


//
// MODAL ACTIONS
//
    // Actions area (top or bottom)
    .modal-actions {
        @include clearfix(); // clear it in case folks use .pull-* classes on buttons
        position: relative;
        min-height: $btnHeight + ($modalActionsPaddingVertical * 2);
        margin: 0;
        padding: $modalActionsPaddingVertical $modalActionsPaddingHorizontal;
        text-align: center;

        &:empty { display: none; }

        // if the modal-actions container is directly adjacent to the .modal-header
        // we need to use a negative top margin to prevent a double-border
        .modal-header + & {
            // have to add the $alertBdRadius amount to completely
            // cover up the dialog header bottom border.
            margin-top: -#{$dialogBdWidth + $alertBdRadius};
        }

        &:after, &:before {
            position: absolute;
            right: $modalInnerPadding;
            left: $modalInnerPadding;
            display: block;
            height: $dialogBdWidth;
            content: "";
            background: $dialogActionsBdColor;
        }
        &:before {
            top: 0;
        }
        &:after {
            bottom: 0;
        }

        // headings within action blocks
        #{$headings} { margin-top: 0; }

        // paragraphs within action blocks
        p:first-of-type {
            // keep lined up vertically with .btn elems
            margin-top: 7px;
        }

        // Properly space out buttons
        .btn + .btn {
            margin-bottom: 0; // account for input[type="submit"] which gets the bottom margin like all other inputs
            margin-left: $dialogContentPadding / 2;
        }
        // but override that for button groups
        .btn-group .btn + .btn { margin-left: -1px; }
        // and override it for block buttons as well
        .btn-block + .btn-block { margin-left: 0; }
        .btn.pull-left { margin-right: $dialogContentPadding; }
        // specificity override for grid span buttons (like session timeout dialog)
        .btn.pull-right { float: right !important; }

        //
        // MODAL ACTIONS TO NEST ALERTS WITHIN
        //
        &.modal-alert {
            z-index: 2; // keep in-line with modal-header so top border color of alert is showing
            min-height: 0;
            padding: 0;
            margin-left: $modalInnerPadding;
            margin-right: $modalInnerPadding;

            &:before,
            &:after {
                background-color: transparent;
            }

            .alert {
                margin-bottom: 0;
            }
        }
    } // END .modal-actions

    .modal-actions-top {
        &.flush {
            padding-top: 0;
        }
        &:before { display: none; }
    }
    .modal-actions-bottom {
        &.flush {
            padding-bottom: 0;
        }
        &:after { display: none; }
    }

    // FOOTER
    .modal-footer {
        padding: $modalActionsPaddingVertical;
        text-align: right; // right align buttons
        &:after { display: none; }

        // validation / status alert box within .modal-footer
        .alert {
            position: relative;
            margin: 0;
            text-align: center;
            border-width: $modalTitleBdWidth;
        }
    }


//
// DIALOG SIZE VARIATIONS
//
    .modal-sm {
        // Top section of the modal w/ title and dismiss
        .modal-header {
            padding: 0 $dialogHeaderPaddingSm;

            + .modal-body {
                padding: $dialogBodyPaddingSm 0;
            }
        }

        // Title text within header
        .modal-title {
            padding: $dialogHeaderPaddingSm 0 ($dialogHeaderPaddingSm - 1);
            font-size: $dialogHeaderFontSizeSm;
            line-height: $dialogHeaderLineHeightSm;
        }

        // Close icon
        .modal-header .close {
            // need the double padding on the left side to keep the hitarea square
            padding: $dialogHeaderPaddingSm $dialogContentPadding $dialogContentPadding ($dialogContentPadding * 2);
            font-size: $dialogHeaderLineHeightSm + 2;
            line-height: $dialogHeaderLineHeightSm;
        }

        .modal-actions {
            min-height: $btnHeight + ($dialogContentPadding * 2);
            margin: 0;
            padding: $dialogFooterPaddingSm;

            &:after, &:before {
                right: $dialogFooterPaddingSm;
                left: $dialogFooterPaddingSm;
            }
        }
    }


//
// MODAL LOADING OVERLAYS
//
    // puts a white overlay over the top of an advanced modal while its loading
    .modal-loading {
        @extend %default-backdrop;
        position: absolute;
        z-index: $zindexModal + 1; // keep above modal contents
        background-color: $white; // fallback
        background-color: rgba($white, .8);
        border-radius: $dialogBdRadius;

        .loader-wrapper {
            position: absolute;
            top: 50%;
            left: 50%;
            // horizontal centering
            width: $baseSpinnerSize;
            // vertical centering
            height: $baseSpinnerSize;
            margin-top: -($baseSpinnerSize/2);
            margin-left: -($baseSpinnerSize/2);
        }
    } // END .modal-disabled


//
// FORMS WITHIN MODALS
//
    .modal {
        form {
            text-align: left;
            // remove border from legend
            legend {
                margin-bottom: $lineHeightBasePx / 2;
                border: 0 none;
            }
            *[class^="col-"] {
                margin-bottom: 0;
            }
        }
    }


//
// CAROUSELS WITHIN MODALS (product tour pattern)
//
    .modal {
        .carousel {
            margin-left: -#{$modalBodyContentPaddingHorizontal} !important;
            margin-right: -#{$modalBodyContentPaddingHorizontal} !important;
        }
    }


//
// RESPONSIVE MODAL
//
    @media screen and (min-width: $screenTablet) {

        .modal-dialog {
            right: auto;
            left: 50%;
            width: $modalDialogWidth;
            margin-left: -($modalDialogWidth / 2);
        }

        .modal-body .body-content {
            .row {
                margin-right: -$modalBodyContentPaddingHorizontal;
                margin-left: -$modalBodyContentPaddingHorizontal;
            }
            [class^="col-"] {
                padding-right: $modalBodyContentPaddingHorizontal;
                padding-left: $modalBodyContentPaddingHorizontal;
            }
            &.flush {
                .row {
                    margin-right: -$modalInnerPadding;
                    margin-left: -$modalInnerPadding;
                }
                [class^="col-"] {
                    padding-right: $modalInnerPadding;
                    padding-left: $modalInnerPadding;
                }
            }
        }

        .modal-actions {
            .row {
                margin-right: -$modalBodyContentPaddingHorizontal;
                margin-left: -$modalBodyContentPaddingHorizontal;
            }
            [class^="col-"] {
                padding-right: $modalBodyContentPaddingHorizontal;
                padding-left: $modalBodyContentPaddingHorizontal;
            }
        }

        .modal-footer {
            .row {
                margin-right: -$modalInnerPadding;
                margin-left: -$modalInnerPadding;
            }
            [class^="col-"] {
                padding-right: $modalInnerPadding;
                padding-left: $modalInnerPadding;
            }
        }

        //
        // SESSION TIMEOUT DIALOG (GLOBAL)
        //
        .session-timeout-dialog {
            .modal-dialog {
                @include centeredDialog($modalCntHeight: $modalSessionTimeoutHeight, $footer: true);
            }
        }
    }

@import "_modals-contained.scss";
