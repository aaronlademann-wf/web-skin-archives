//----------------------------------------------------

//+  PARTIAL:  _breadcrumbs.scss
//+  PARENT:   wdesk.scss

    // related partials:
    //+ "_navs.scss"

//----------------------------------------------------

@mixin breadcrumbLiHitareaGlobal {
    @include disableUserSelect;
    cursor: default;
    text-transform: uppercase !important;
}

.breadcrumb {
    padding: $breadcrumbPadding;
    margin: $breadcrumbMargin;
    font-size: $breadcrumbFontSize;
    list-style: none;
    background-color: $breadcrumbBg;

    > li {
        @include breadcrumbLiHitareaGlobal;
        position: relative; // to contain the :after separator
        display: inline-block;
        @include ie7-inline-block;
        padding: 0 $breadcrumbCrumbPaddingRight 0 $breadcrumbCrumbPaddingLeft;
        margin: 0 $breadcrumbCrumbMarginRight 0 $breadcrumbCrumbMarginLeft;
        white-space: nowrap; // zap generated content white-space bug: http://bit.ly/180xVJM

        // zap left margin on first crumb
        &:first-child {
            margin-left: 0;
        }

        // divider
        &:after {
            position: absolute;
            display: inline-block;
            @include ie7-inline-block;
            padding-left: $breadcrumbCrumbPaddingLeft + $breadcrumbCrumbDividerAngleAdjust;
            color: $breadcrumbCrumbDividerColor;
            // pre white-space added to override inline-block non-collapsing white-space
            // zap generated content white-space bug: http://bit.ly/180xVJM
            white-space: pre;
            cursor: default;
            content: "/";
        }
        // no divder after last link
        &:last-child {
            &:after {
                content: "";
            }
        }

        // crumb link
        > .hitarea {
            @include breadcrumbLiHitareaGlobal;
            cursor: pointer;
            text-decoration: none;
            color: $breadcrumbCrumbColor;

            // HOVER STATE
            #{$linkHoverFocus} {
                text-decoration: none;
                color: $breadcrumbCrumbColorHover;
            }

            // PRESSED STATE
            #{$linkPressed} {
                color: $breadcrumbCrumbColorPress;
            }
        }
        // active crumb
        &.active {
            color: $breadcrumbCrumbColorActive;
            font-weight: bold;
        }
    }
}


//
// bordered variation
//
.breadcrumb-bordered {
    padding: $breadcrumbBorderedPadding;
    border-radius: $borderRadiusBase;
    border: $subNavBdWidth solid $subNavBdColor;
    @if $subNavBdWidthEmphasized > 1 {
        // need the thick green border to align flush bottom
        padding-bottom: 0;
    }
}


//
// header variation
//
.breadcrumb-header {
    padding: $breadcrumbHeaderPaddingTop 0 $breadcrumbHeaderPaddingBottom;
    font-size: $breadcrumbHeaderFontSize;
    font-family: $webfontSansSerif;

    > li {
        padding: 0 $breadcrumbHeaderCrumbPaddingRight 0 $breadcrumbHeaderCrumbPaddingLeft;
        margin: 0 $breadcrumbHeaderCrumbMarginRight 0 $breadcrumbHeaderCrumbMarginLeft;
        white-space: nowrap; // zap generated content white-space bug: http://bit.ly/180xVJM
        text-transform: none !important;

        // zap left margin on first crumb
        &:first-child {
            margin-left: 0;
        }

        > .hitarea {
            text-transform: none !important;
        }

        // divider
        &:after {
            padding-left: $breadcrumbHeaderCrumbPaddingLeft + $breadcrumbHeaderCrumbDividerAngleAdjust;
        }

        // active crumb
        &.active {
            font-weight: normal;
        }
    }

    // bordered header breadcrumb
    &.breadcrumb-bordered {
        padding: $breadcrumbHeaderPaddingTop nth($breadcrumbBorderedPadding, 2) ($breadcrumbHeaderPaddingBottom - ($subNavBdWidth * 2));
    }
}
