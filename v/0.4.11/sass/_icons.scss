//----------------------------------------------------

//+     PARTIAL:  _icons.scss
//+     PARENT:   wdesk.scss

    // Icon Glyphs (fonts) Created by Aaron Lademann
    // Using IcoMoon/App

    // related partials:
    //+ "_fonts.scss"
    //+ "_constants/_icon-reference.scss"
    //+ "_icons_pua-components.scss"
    //+ "_icons_pua-main.scss"
    //+ "_icons_pua-two-color.scss"

//----------------------------------------------------

// If Aria Labels are included, use them for screen readers
[aria-label]{ speak: attr(aria-label); }


//
// CORE ICON REFERENCE CLASSES
//
    // base 16 icon reference
    @mixin icon {
            position: relative;
            top: 0;
            left: 0;

            @include icon-main;

        //
        //  GLOBAL ICON STYLES
        //
            display: inline-block; // should this be inline?
            // so we can position the :after and :before glyphs using absolute
            overflow: visible;
            width: $baseIconSize;
            height: $baseIconSize;
            vertical-align: middle;
            color: inherit;

            &,
            &:before,
            &:after {
                // prevent ios "magnifying glass" bug: http://bit.ly/1eQuSNj
                @include disableUserSelect;
                padding: 0;
                cursor: inherit;
                text-decoration: none !important;
                // make sure all is clear for the glyph to show-through
                background-color: transparent;
                background-image: none;
                font-weight: normal;
                font-style: normal;
                font-variant: normal;
                text-transform: none;
                speak: none; // screen reader support

                @if $webkit-support {
                    -webkit-font-smoothing: antialiased;
                }
                @if $mozilla-support {
                    -moz-osx-font-smoothing: grayscale;
                }
                font-smoothing: antialiased;
            }

            &:before,
            &:after {
                @include icon-pseudo-glyph;
            }

            // SECOND COLOR
            // two-color icons achieved through :after
            // overlayed ontop of their counterparts
            // the :after PUA declarations are in _icons_pua-two-color.scss
            &:after {
                // no matter what - we don't want the second color to add an additional text-shadow
                // since the first color glyph INCLUDES the shape of the second color one - the second color just sits on top.
                text-shadow: none !important;
            }
    } // END %icon reference class

    // base 24 icon reference
    @mixin icon-twfr {
        font-size: $baseIconSize24;
        width: $baseIconSize24;
        height: $baseIconSize24;

        &:before,
        &:after {
            line-height: $baseIconSize24;
        }
    }


//
// ACTUAL ICON CLASS / DATA ATTRIBUTE
//
    .icon {
        // base 16
        @include icon;

        // base 24 variant (icons that start with .icon-twfr-)
        &[class*="icon-twfr-"] {
            @include icon-twfr;
        }

        &[class*="#{$twoColorClassName}"] {
            @include icon-color;
        }

        // TODO: in 0.5.0 - devs will need to use a class like .icon-doctype to use this font set - there are simply too many exceptions going on right now for this to scale as a rule.
        &[class*="icon-file"],
        &[class*="icon-twfr-file"],
        &[class*="icon-sec-"],
        &[class*="icon-folder"],
        &.icon-twfr-folder,
        &[class*="book-binder"],
        &.icon-image,
        &.icon-twfr-image {
            @include icon-doctype;
        }
    } // END .icon


//
// ICON SIZES
//
    $i: 1 !global;

    @each $sizeClass in $utilitySizeClasses {
        $base16GlyphSize: floor($baseIconSize * nth($utilitySizeMultipliers, $i));
        $base24GlyphSize: floor($baseIconSize24 * nth($utilitySizeMultipliersBase24, $i));

        .icon-#{$sizeClass} {
            // base 16
            font-size: $base16GlyphSize;
            width:     $base16GlyphSize;
            height:    $base16GlyphSize;
            &:before,
            &:after {
                line-height: $base16GlyphSize;
            }

            // base 24
            &[class*="icon-twfr-"] {
                font-size: $base24GlyphSize;
                width:     $base24GlyphSize;
                height:    $base24GlyphSize;
                &:before,
                &:after {
                    line-height: $base24GlyphSize;
                }
            }
        }
        $i: $i + 1 !global;
    } // END @each icon size


//
// APP STATUS ICON COLORS
//
    $i: 1 !global;

    @each $state in $states_min {
        .bg-#{$state} .icon-status,
        .icon-#{$state} {
            &:before,
            &:after {
                color: nth($state_min_colors, $i);
            }
            @if $iconTextShadows {
                // the :after glyphs (second color) don't get text shadows
                &:before {
                    text-shadow: 0 1px 0 transparentize(contrastTextShadow(nth($state_min_colors, $i)), .5);
                }
            }
        }
        $i: $i + 1 !global;
    }


//
// GLYPH PUA DECLARATIONS
//
    // main set
    @import "_icons_pua-main.scss";
    // second-color glyphs
    @import "_icons_pua-two-color.scss";
    // doctype set
    @import "_icons_pua-doctypes.scss";
    // special @extend cases
    @import "_icons_pua-components.scss";
