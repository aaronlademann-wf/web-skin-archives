//----------------------------------------------------

//+  PARTIAL:  _dropdowns.scss
//+  PARENT:   wdesk.scss

    // related partials:
    //+ "_navs.scss"
    //+ "_button-groups.scss"

//----------------------------------------------------


.dropdown {
    position: relative;
    display: inline-block;
    @include ie7-inline-block;
}

//
// Dropdown arrow/caret
//
.caret {
    display: inline-block;
    @include ie7-inline-block;
    width: 0;
    height: 0;
    content: "";
    vertical-align: top;
    border-top:   $caretWidth solid $caretColor;
    border-right: $caretWidth solid transparent;
    border-left:  $caretWidth solid transparent;
    // give a little extra contrast for browsers that can handle it
    @include opacity($caretAlpha);

    // Place the caret
    .dropdown &,
    .dropdown-toggle & {
        margin-top: $caretTopMarginBase;
        margin-left: $caretHorizontalSpacing;
    }
    .no-text & {
        margin-right: 0;
        margin-left: 0;
    }

    // DIRECTION VARIATIONS
    &.caret-left  { @include caret('left',  $caretColor, $size: $caretWidth); }
    &.caret-right { @include caret('right', $caretColor, $size: $caretWidth); }
    &.caret-up    { @include caret('up',    $caretColor, $size: $caretWidth); }
} // END .caret

// IE7 needs help to get dropdown-toggles for split button dropdowns
// containing carets to the right height.
@if $ie7-support {
    .btn-group > .btn + .btn {
        .caret { *height: 8px; }
    }
}


//
// The dropdown menu (ul)
//
.dropdown-menu {
    @extend %dropdown-menu;
    display: none; // none by default, but block on "open" of the menu
    max-width: $menuVMaxWidth;

    // Right aligned dropdowns
    .pull-right &,
    &.pull-right {
        right: 0;
        left: auto;
    }

    // menu list of links within the dropdown menu
    > li {
        @extend %dropdown-menu-item;

        // Links within the dropdown menu
        > .hitarea {
            @extend %dropdown-menu-link;

            // HOVER / FOCUS STATE
            #{$linkHoverFocus} {
                @extend %vertical-nav-link-hover;
            }

            // PRESSED STATE
            #{$linkPressed} {
                @extend %vertical-nav-link-press;
            }

        } // END .dropdown-menu > li > .hitarea

        //
        // Active state
        //
        &.active {
            > .hitarea {
                font-weight: bold;
                color: $menuVLinkColorActive;
                background-color: $menuVLinkBgActive;
                outline: 0;
            }
        }

        //
        // Disabled state
        //
        > .hitarea[disabled],
        > .hitarea.disabled {
            cursor: not-allowed !important;
            pointer-events: none !important; // Future-proof disabling of clicks
            text-decoration: none !important;
            color: $navLinkColorDisabled !important;
            background-color: transparent !important;
        }

        // Checked State
        // -------------------------
        @include dropdownMenuItemChecked($menuVLinkPaddingHorizontal);


    } // END .dropdown-menu > li

    // Dividers (basically an hr) within the dropdown
    .divider {
        @include dividerHorizontal($bg: $menuVLinkBg, $margin: $menuVDividerMargin);
    }
} // END .dropdown-menu


//
// Optional components
//

// Dropdown section headers
.dropdown-header {
    @extend %dropdown-header;
}

// Dropdown "info" sections
// Used for no-results styling,
// and various non-clickable info panels
.dropdown-info {
    @extend %dropdown-info;
}


//
// Size variations
//
.dropdown-menu-md {
    @include dropdownMenuSize(md, $menuVMinWidth_md, $menuVPaddingVertical_md, $menuVPaddingHorizontal_md, $menuVBdRadius_md);
    @include dropdownMenuItemSize(md, $menuVLinkFontSize_md, $menuVLinkHeaderFontSize_md, $menuVLinkIconMargin_md, $menuVLinkLineHeight_md, $menuVMaxWidth_md, $menuVLinkPaddingVertical_md, $menuVLinkPaddingHorizontal_md);
}
.dropdown-menu-lg {
    @include dropdownMenuSize(lg, $menuVMinWidth_lg, $menuVPaddingVertical_lg, $menuVPaddingHorizontal_lg, $menuVBdRadius_lg);
    @include dropdownMenuItemSize(lg, $menuVLinkFontSize_lg, $menuVLinkHeaderFontSize_lg, $menuVLinkIconMargin_lg, $menuVLinkLineHeight_lg, $menuVMaxWidth_lg, $menuVLinkPaddingVertical_lg, $menuVLinkPaddingHorizontal_lg);
}


//
// Open state for the dropdown
//
.open {
    .caret {
        // reverse the caret to indicate another button click will close the dropup
        border-top-width: 0;
        border-bottom-width: $caretWidth;
        border-bottom-style: solid;
    }
    > .dropdown-menu { display: block; }
} // END .open state for the dropdown


// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    z-index: $zindexDropdown - 10;
}


//
// Allow for dropdowns to go bottom up (aka, dropup-menu)
//
// Just add .dropup after the standard .dropdown class and you're set, bro.
//
.dropup {
    .caret {
        content: "";
        // Reverse the caret
        border-top-width: 0;
        border-bottom-width: $caretWidth;
        border-bottom-style: solid;
    }

    &.open {
        .caret {
            content: "";
            border-top-width:   $caretWidth;
            border-right:       $caretWidth solid transparent;
            // reverse the caret to indicate another button click will close the dropup
            border-bottom:      0 none;
            border-left:        $caretWidth solid transparent;
        }
    }

    // Different positioning for bottom up menu
    > .dropdown-menu {
        top: auto;
        bottom: 100%;
        margin-top: 0;
        margin-bottom: $btnDropdownMenuSpacing;
        @include box-shadow($menuVShadowUp);
    }
}
