//----------------------------------------------------

//+  PARTIAL:  _constants/_variables.scss
//+  PARENT:   _constants/_wdesk-manifest.scss

    // related partials:
    //+ "_defaults.scss"
    //+ "_fonts.scss"
    //+ "_support.scss"

//----------------------------------------------------


//
// Global Typography
//
    $fontFamilyBase:                $sansFontBaseFallback;
    $fontFamilySansSerif:           $fontFamilyBase;
    $fontFamilySerif:               Georgia, "Times New Roman", Times, serif;
    $fontFamilyMonospace:           Menlo, Monaco, Consolas, "Courier New", courier, monospace;


//
// Component Typography
//
    $mutedPct: 70%; // how faded do we want "muted" colors to be? (_type.scss)


    //
    // Headings
    //
        $headingsFontFace:              $webfontSansSerif;
        $headingsColor:                 zestyCrayonColor(gray, darker);
        $headingsLineHeight:            1.1;
        $headingsKerning:               0;
        $headingsMargins:               $lineHeightBasePx 0 round($lineHeightBasePx / 2);

        // <h1>
        $headingMainTitleFontSize:      36px;
        $headingMainTitleLineHeight:    $headingsLineHeight;
        // <h2>
        $headingSuperHeaderFontSize:    24px;
        $headingSuperHeaderLineHeight:  $headingsLineHeight;
        // <h3>
        $heading1FontSize:              18px;
        $heading1LineHeight:            $headingsLineHeight;
        // <h4>
        $heading2FontSize:              16px;
        $heading2LineHeight:            $headingsLineHeight;
        // <h5>
        $heading3FontSize:              14px;
        $heading3LineHeight:            $headingsLineHeight;
        // <h6>
        $heading4FontSize:              14px;
        $heading4LineHeight:            $headingsLineHeight;

        // heading arrays
        // TODO: write tests to esure these arrays have the same length;
        $headings:                      h1 h2 h3 h4 h5 h6;
        $fakeHeadings:                  unquote(".h1") unquote(".h2") unquote(".h3") unquote(".h4") unquote(".h5") unquote(".h6");
        $headingFontSizes:              $headingMainTitleFontSize, $headingSuperHeaderFontSize, $heading1FontSize, $heading2FontSize, $heading3FontSize, $heading4FontSize;
        $headingLineHeights:            $headingMainTitleLineHeight, $headingSuperHeaderLineHeight, $heading1LineHeight, $heading2LineHeight, $heading3LineHeight, $heading4LineHeight;


    //
    // Buttons
    //
        $btnFontFamily:                 $fontFamilyBase;
        $btnFontSize:                   $fontSizeBase;


    //
    // Panels
    //
        $panelCopyFontWeight:           normal;
        $panelCopyFontSize:             $fontSizeBase;
        $panelCopyLineHeight:           $lineHeightBasePx + 2;
        $panelCopyColor:                zestyCrayonColor(gray, main);

        $panelHeaderFontWeight:         bold;
        $panelHeaderFontSize:           $fontSizeBase;
        $panelHeaderLineHeight:         $lineHeightBasePx + 2;
        $panelHeaderColor:              zestyCrayonColor(gray, main);


    //
    // Dialog Boxes & Dropdowns
    //
        $dialogsFontWeight:             normal;
        $dialogsFontSize:               $fontSizeBase - 1;
        $dialogsLineHeight:             $lineHeightBasePx;
        $dialogsColor:                  zestyCrayonColor(gray, main);


    //
    // Inline Paragraph Callouts
    //
        $inlineCalloutFontWeight:       bold;
        $inlineCalloutFontSize:         $fontSizeBase - 1;
        $inlineCalloutLineHeight:       $lineHeightBasePx;
        $inlineCalloutColor:            zestyCrayonColor(gray, main);


    //
    // Ribbon Toolbar Labels
    //
        $navRibbonLabelFontFace:        $fontFamilyBase;
        $navRibbonLabelFontWeight:      normal;
        $navRibbonLabelFontSize:        11px;
        $navRibbonLabelLineHeight:      14px;
        $navRibbonLabelColor:           zestyCrayonColor(gray, main);
        $navRibbonLabelColorHover:      zestyCrayonColor(gray, darker);
        $navRibbonLabelIconColor:       $wf_gray;
        $navRibbonLabelCaret:           lighten($navRibbonLabelColor, 20);


//
// Global color palette
//
    //
    // Grays
    //
        $black:                     #000;
        $grayDarker:                darken(zestyCrayonColor(gray, darker), 13.5%); // #222
        $grayDark:                  zestyCrayonColor(gray, darker); // #444
        $gray:                      zestyCrayonColor(gray, main); // #595959
        $grayLight:                 zestyCrayonColor(gray, pastel1); // #b2b2b2
        $grayLightC:                $wf_gray_lt4; // #cbcbcb
        $grayLighter:               $wf_gray_lt5; // #e3e3e3
        $grayLightest:              $wf_gray_lt6; // #f3f3f3
        $almostWhite:               desaturate(lightenBgAmount(zestyCrayonColor(gray, pastel1)), 5%); // #fafafa
        $white:                     #fff;


    //
    // Brand color "states"
    //
        // solid bg color states
        $state_default:             zestyCrayonColor(gray,   pastel1);  // a.k.a "secondary"
        $state_primary:             zestyCrayonColor(green,  main);     // a.k.a "action"
        $state_alt:                 zestyCrayonColor(blue,   main);     // a.k.a "alt"
        $state_success:             zestyCrayonColor(green,  main);     // for Wdesk, primary IS green - so success is the same.
        $state_warning:             zestyCrayonColor(orange, main);
        $state_error:               zestyCrayonColor(red,    main);     // a.k.a "danger"

        // reset gradients
        $resetMSIEGradient:         unquote("progid:DXImageTransform.Microsoft.gradient(enabled=false)");
        $resetMSIEOpacity:          unquote("progid:DXImageTransform.Microsoft.Alpha(enabled=false)");


    //
    // Form control "states"
    //
        $state_defaultColor:        darken($state_default, 20%);
        $state_defaultBg:           $almostWhite;
        $state_defaultBd:           darken(adjust-hue($state_defaultBg, -5), darkenBdAmount($state_defaultBg, $offset: -5%));

        $state_primaryColor:        desaturate(darken($state_primary, 10%), 10%); // was #468847
        $state_primaryBg:           desaturate(lightenBgAmount($state_primary), 10%); // was #dff0d8
        $state_primaryBd:           darken(adjust-hue($state_primaryBg, -7), darkenBdAmount($state_primaryBg, $offset: 30%));

        $state_altColor:            desaturate(darken($state_alt, 5%), 10%); // was #3a87ad
        $state_altBg:               desaturate(lightenBgAmount($state_alt), 5%); // was #d9edf7
        $state_altBd:               darken(adjust-hue($state_altBg, -5), darkenBdAmount($state_altBg));

        $state_successBg:           $state_primaryBg;
        $state_successBd:           $state_primaryBd;
        $state_successColor:        $state_primaryColor;

        $state_warningColor:        desaturate(darken($state_warning, 10%), 10%); // was #c09853
        $state_warningBg:           desaturate(lightenBgAmount($state_warning), 5%); // was #fcf8e3
        $state_warningBd:           darken(adjust-hue($state_warningBg, -5), darkenBdAmount($state_warningBg));

        $state_errorColor:          desaturate(darken($state_error, 10%), 10%); // was #b94a48
        $state_errorBg:             desaturate(lightenBgAmount($state_error), 5%); // was #f2dede
        $state_errorBd:             darken(adjust-hue($state_errorBg, -5), darkenBdAmount($state_errorBg, $offset: -5%));


    //
    // Button colors
    //
        $btnDisabledAlpha:          $disabledAlphaDefault;

        //
        // DEFAULT
        //
        $btnColorDefault:           $wf_gray;                               // #595959 hsl(0, 0%, 35%)
        $btnBgDefault:              lighten($wf_gray_lt6, 1.5);             // #f7f7f7 hsl(0, 0%, 97%)
        $btnBdDefault:              darken($wf_gray_lt5, 1);                // #e0e0e0 hsl(0, 0%, 88%)
        $btnShdDefault:             $btnBdDefault;                          // #e0e0e0 hsl(0, 0%, 88%)
            // hover
            $btnColorDefaultHover:  darken($btnColorDefault, 15);           // #333333 hsl(0, 0%, 20%)
            $btnBgDefaultHover:     lighten($btnBgDefault, 3);              // #ffffff hsl(0, 0%, 0%)
            $btnBdDefaultHover:     inherit;
            $btnShdDefaultHover:    inherit;
            // press
            $btnColorDefaultPress:  darken($btnColorDefault, 15);           // #333333 hsl(0, 0%, 20%)
            $btnBgDefaultPress:     darken($btnBgDefault, 4);               // #ededed hsl(0, 0%, 93%)
            $btnBdDefaultPress:     inherit;
            $btnShdDefaultPress:    inherit;

        //
        // PRIMARY / SUCCESS
        //
        $btnColorPrimary:           $white;
        $btnBgPrimary:              $state_primary;                         // #66cc00 hsl(90, 100%, 40%)
        $btnBdPrimary:              darken($btnBgPrimary, 3);               // #5ebd00 hsl(90, 100%, 37%)
        $btnShdPrimary:             desaturate($btnBdPrimary, 20);          // #5eaa13 hsl(90, 80%,  37%)
            // hover
            $btnColorPrimaryHover:  $btnColorPrimary;
            $btnBgPrimaryHover:     lighten($btnBgPrimary, 2);              // #6ad400 hsl(90, 100%, 42%)
            $btnBdPrimaryHover:     inherit;
            $btnShdPrimaryHover:    inherit;
            // press
            $btnColorPrimaryPress:  $btnColorPrimary;
            $btnBgPrimaryPress:     darken($btnBgPrimary, 2);               // #62c400 hsl(90, 100%, 38%)
            $btnBdPrimaryPress:     inherit;
            $btnShdPrimaryPress:    inherit;

            // SUCCESS IS THE SAME THING AS PRIMARY FOR WF
            $btnColorSuccess:           $btnColorPrimary;
            $btnBgSuccess:              $btnBgPrimary;
            $btnBdSuccess:              $btnBdPrimary;
            $btnShdSuccess:             $btnShdPrimary;
                // hover
                $btnColorSuccessHover:  $btnColorPrimaryHover;
                $btnBgSuccessHover:     $btnBgPrimaryHover;
                $btnBdSuccessHover:     $btnBdPrimaryHover;
                $btnShdSuccessHover:    $btnShdPrimaryHover;
                // press
                $btnColorSuccessPress:  $btnColorPrimaryPress;
                $btnBgSuccessPress:     $btnBgPrimaryPress;
                $btnBdSuccessPress:     $btnBdPrimaryPress;
                $btnShdSuccessPress:    $btnShdPrimaryPress;

        //
        // ALTERNATE
        //
        $btnColorAlt:               $white;
        $btnBgAlt:                  $state_alt;                             // #0094ff hsl(205, 100%, 50%)
        $btnBdAlt:                  darken($btnBgAlt, 5);                   // #0085e6 hsl(205, 100%, 45%)
        $btnShdAlt:                 darken(desaturate($btnBdAlt, 20), 1);   // #167fc9 hsl(205, 80%, 44%)
            // hover
            $btnColorAltHover:      $btnColorAlt;
            $btnBgAltHover:         lighten($btnBgAlt, 5);                  // #1a9fff hsl(205, 100%, 55%)
            $btnBdAltHover:         inherit;
            $btnShdAltHover:        inherit;
            // press
            $btnColorAltPress:      $btnColorAlt;
            $btnBgAltPress:         darken($btnBgAlt, 5);                   // #0085e6 hsl(205, 100%, 45%)
            $btnBdAltPress:         inherit;
            $btnShdAltPress:        inherit;

        //
        // WARNING
        //
        $btnColorWarning:           $white;
        $btnBgWarning:              $state_warning;                         // #fbad17 hsl(39, 97%, 54%)
        $btnBdWarning:              darken($btnBgWarning, 5);               // #f4a204 hsl(39, 97%, 49%)
        $btnShdWarning:             desaturate($btnBdWarning, 20);          // #db9a1d hsl(39, 77%, 49%)
            // hover
            $btnColorWarningHover:  $btnColorWarning;
            $btnBgWarningHover:     adjust-color($btnBgWarning, $hue: 1, $saturation: -1, $lightness: 5); // #fbb630 hsl(40, 96%, 59%)
            $btnBdWarningHover:     inherit;
            $btnShdWarningHover:    inherit;
            // press
            $btnColorWarningPress:  $btnColorWarning;
            $btnBgWarningPress:     darken($btnBgWarning, 5);               // #f4a204 hsl(39, 97%, 49%)
            $btnBdWarningPress:     inherit;
            $btnShdWarningPress:    inherit;

        //
        // ERROR
        //
        $btnColorError:             $white;
        $btnBgError:                $state_error;                           // #ee2724 hsl(1, 86%, 54%)
        $btnBdError:                darken($btnBgError, 5);                 // #e71512 hsl(1, 86%, 49%)
        $btnShdError:               desaturate($btnBdError, 20);            // #ce2d2b hsl(1, 65%, 49%)
            // hover
            $btnColorErrorHover:    $btnColorError;
            $btnBgErrorHover:       lighten($btnBgError, 5);                // #f03e3c hsl(1, 86%, 59%)
            $btnBdErrorHover:       inherit;
            $btnShdErrorHover:      inherit;
            // press
            $btnColorErrorPress:    $btnColorError;
            $btnBgErrorPress:       darken($btnBgError, 5);                 // #e71512 hsl(1, 86%, 49%)
            $btnBdErrorPress:       inherit;
            $btnShdErrorPress:      inherit;


    //
    // Alert colors
    //
        $alertBgDefault:            darken($state_defaultBg, 2%);
        $alertBgPrimary:            darken($state_primaryBg, 2%);
        $alertBgAlt:                darken($state_altBg, 2%);
        $alertBgSuccess:            darken($state_successBg, 2%);
        $alertBgWarning:            darken($state_warningBg, 2%);
        $alertBgError:              darken($state_errorBg, 2%);

        $alertBdDefault:            mix($state_defaultColor, $alertBgDefault, 25%);
        $alertBdPrimary:            mix($state_primaryColor, $alertBgPrimary, 25%);
        $alertBdAlt:                mix($state_altColor, $alertBgAlt, 25%);
        $alertBdSuccess:            mix($state_successColor, $alertBgSuccess, 25%);
        $alertBdWarning:            mix($state_warningColor, $alertBgWarning, 25%);
        $alertBdError:              mix($state_errorColor, $alertBgError, 25%);

        // darken / desaturate the text color in alert boxes so its easy to read, and not too "loud"
        $alertColorDefault:         mix($wf_gray, $state_defaultColor, 40%);
        $alertColorPrimary:         mix($wf_gray, $state_primaryColor, 40%);
        $alertColorAlt:             mix($wf_gray, $state_altColor, 40%);
        $alertColorSuccess:         mix($wf_gray, $state_successColor, 40%);
        $alertColorWarning:         mix($wf_gray, $state_warningColor, 40%);
        $alertColorError:           mix($wf_gray, $state_errorColor, 40%);

        // lighten the alert-heading border color
        $alertHeadingBdDefault:     alertHeadingBd($alertBdDefault, $state_defaultBg);
        $alertHeadingBdPrimary:     alertHeadingBd($alertBdPrimary, $state_primaryBg);
        $alertHeadingBdAlt:         alertHeadingBd($alertBdAlt, $state_altBg);
        $alertHeadingBdSuccess:     alertHeadingBd($alertBdSuccess, $state_successBg);
        $alertHeadingBdWarning:     alertHeadingBd($alertBdWarning, $state_warningBg);
        $alertHeadingBdError:       alertHeadingBd($alertBdError, $state_errorBg);


    //
    // Panel colors
    //
        $panelBdDefault:            $wf_gray_lt4; // should match table border color
        $panelBdPrimary:            $wf_green; // Primary has reverse contrast heading
        $panelBdAlt:                $alertBdAlt;
        $panelBdSuccess:            $alertBdSuccess;
        $panelBdWarning:            $alertBdWarning;
        $panelBdError:              $alertBdError;

        $panelFocusBdDefault:       zestyCrayonColor($inputBdColorGroupFocus, main); // should be just slightly darker than form control
        $panelFocusBdPrimary:       $panelBdPrimary;
        $panelFocusBdAlt:           $panelBdAlt;
        $panelFocusBdSuccess:       $panelBdSuccess;
        $panelFocusBdWarning:       $panelBdWarning;
        $panelFocusBdError:         $panelBdError;

        $panelHeadingColorDefault:  $wf_gray;
        $panelHeadingColorPrimary:  $white; // Primary has reverse contrast heading
        $panelHeadingColorAlt:      $alertColorAlt;
        $panelHeadingColorSuccess:  $alertColorSuccess;
        $panelHeadingColorWarning:  $alertColorWarning;
        $panelHeadingColorError:    $alertColorError;

        $panelHeadingBdDefault:     $panelBdDefault;
        $panelHeadingBdPrimary:     $panelBdPrimary;
        $panelHeadingBdAlt:         $panelBdAlt;
        $panelHeadingBdSuccess:     $panelBdSuccess;
        $panelHeadingBdWarning:     $panelBdWarning;
        $panelHeadingBdError:       $panelBdError;

        $panelHeadingBgDefault:     $state_defaultBg;
        $panelHeadingBgPrimary:     $panelHeadingBdPrimary; // Primary has reverse contrast heading
        $panelHeadingBgAlt:         desaturate($state_altBg, 25);
        $panelHeadingBgSuccess:     desaturate($state_successBg, 25);
        $panelHeadingBgWarning:     desaturate($state_warningBg, 25);
        $panelHeadingBgError:       desaturate($state_errorBg, 25);


    //
    // Progress bar colors
    //
        $progressBarBgDefault:      $state_default;
        $progressBarBgPrimary:      $state_primary;
        $progressBarBgAlt:          $state_alt;
        $progressBarBgSuccess:      $state_success;
        $progressBarBgWarning:      $state_warning;
        $progressBarBgError:        $state_error;


//
// "State" Color Arrays
//
//  house these colors for quick 'n easy
//  output of state css for various components
//

    //
    // ELEMS THAT UTILIZE ALL THE STATES
    //
    $states:            default, primary, alt, success, warning, error;

    // default
    $state_colors:      $state_defaultColor, $state_primaryColor, $state_altColor, $state_successColor, $state_warningColor, $state_errorColor;
    $state_bgs:         $state_defaultBg, $state_primaryBg, $state_altBg, $state_successBg, $state_warningBg, $state_errorBg;
    $state_bds:         $state_defaultBd, $state_primaryBd, $state_altBd, $state_successBd, $state_warningBd, $state_errorBd;

    // panels
    $panelBds:          $panelBdDefault, $panelBdPrimary, $panelBdAlt, $panelBdSuccess, $panelBdWarning, $panelBdError;
    $panelFocusBds:     $panelFocusBdDefault, $panelFocusBdPrimary, $panelFocusBdAlt, $panelFocusBdSuccess, $panelFocusBdWarning, $panelFocusBdError;
    $panelHeadingBgs:   $panelHeadingBgDefault, $panelHeadingBgPrimary, $panelHeadingBgAlt, $panelHeadingBgSuccess, $panelHeadingBgWarning, $panelHeadingBgError;
    $panelHeadingColors:$panelHeadingColorDefault, $panelHeadingColorPrimary, $panelHeadingColorAlt, $panelHeadingColorSuccess, $panelHeadingColorWarning, $panelHeadingColorError;
    $panelHeadingBds:   $panelHeadingBdDefault, $panelHeadingBdPrimary, $panelHeadingBdAlt, $panelHeadingBdSuccess, $panelHeadingBdWarning, $panelHeadingBdError;

    // button state arrays
    $state_btnColors:   $btnColorDefault, $btnColorPrimary, $btnColorAlt, $btnColorSuccess, $btnColorWarning, $btnColorError;
    $state_btnBgs:      $btnBgDefault, $btnBgPrimary, $btnBgAlt, $btnBgSuccess, $btnBgWarning, $btnBgError;
    $state_btnBds:      $btnBdDefault, $btnBdPrimary, $btnBdAlt, $btnBdSuccess, $btnBdWarning, $btnBdError;
    $state_btnShds:     $btnShdDefault, $btnShdPrimary, $btnShdAlt, $btnShdSuccess, $btnShdWarning, $btnShdError;
        // hover
        $state_btnColorsHover:   $btnColorDefaultHover, $btnColorPrimaryHover, $btnColorAltHover, $btnColorSuccessHover, $btnColorWarningHover, $btnColorErrorHover;
        $state_btnBgsHover:      $btnBgDefaultHover, $btnBgPrimaryHover, $btnBgAltHover, $btnBgSuccessHover, $btnBgWarningHover, $btnBgErrorHover;
        $state_btnBdsHover:      $btnBdDefaultHover, $btnBdPrimaryHover, $btnBdAltHover, $btnBdSuccessHover, $btnBdWarningHover, $btnBdErrorHover;
        $state_btnShdsHover:     $btnShdDefaultHover, $btnShdPrimaryHover, $btnShdAltHover, $btnShdSuccessHover, $btnShdWarningHover, $btnShdErrorHover;
        // press
        $state_btnColorsPress:   $btnColorDefaultPress, $btnColorPrimaryPress, $btnColorAltPress, $btnColorSuccessPress, $btnColorWarningPress, $btnColorErrorPress;
        $state_btnBgsPress:      $btnBgDefaultPress, $btnBgPrimaryPress, $btnBgAltPress, $btnBgSuccessPress, $btnBgWarningPress, $btnBgErrorPress;
        $state_btnBdsPress:      $btnBdDefaultPress, $btnBdPrimaryPress, $btnBdAltPress, $btnBdSuccessPress, $btnBdWarningPress, $btnBdErrorPress;
        $state_btnShdsPress:     $btnShdDefaultPress, $btnShdPrimaryPress, $btnShdAltPress, $btnShdSuccessPress, $btnShdWarningPress, $btnShdErrorPress;


    //
    // ELEMS THAT DONT NEED DEFAULT / PRIMARY STATES (non-button)
    //
    $states_min:        alt, success, warning, error; // for non-btn elems

    // form / alert state arrays
    $state_min_colors:  $state_altColor, $state_successColor, $state_warningColor, $state_errorColor;
    $state_min_bgs:     $state_altBg, $state_successBg, $state_warningBg, $state_errorBg;
    $state_min_bds:     $state_altBd, $state_successBd, $state_warningBd, $state_errorBd;

    $alertBgs:          $alertBgAlt, $alertBgSuccess, $alertBgWarning, $alertBgError;
    $alertBds:          $alertBdAlt, $alertBdSuccess, $alertBdWarning, $alertBdError;
    $alertColors:       $alertColorAlt, $alertColorSuccess, $alertColorWarning, $alertColorError;
    $alertHeadingBds:   $alertHeadingBdAlt, $alertHeadingBdSuccess, $alertHeadingBdWarning, $alertHeadingBdError;

    $progressBgs:       $progressBarBgAlt, $progressBarBgSuccess, $progressBarBgWarning, $progressBarBgError;


//
// Component Misc
//
    //
    // Scaffolding
    //
        $bodyBg:                    $white;
        $textColor:                 zestyCrayonColor(gray, main);


    //
    // Links
    //
        $linkColor:                 zestyCrayonColor(blue, darker);
        $linkColorHover:            zestyCrayonColor(blue, main);
        $linkColorPressed:          darken($linkColorHover, 5);
        $linkColorDisabled:         $textColor;
        // how much of a darkening does this constitute so we can be consistent when darkening state-colored links
        $linkColorHoverShift:       lightness($linkColorHover) - lightness($linkColor);
        $linkTextShadow:            none;


    //
    // Typography
    //
        $headingBdWidth:            1px;
        $headingBdColor:            zestyCrayonColor(gray, pastel2); // if/when we do underline headings (like in modal)

        $definitionListTermWidth:   160px;


    //
    // Buttons
    //
        // arrays containing this information that can be indexed via $btnSizeClasses
        $btnPadTops:                $btnPadTopXsmall, $btnPadTopSmall, $btnPadTop, $btnPadTopLarge;
        $btnHeights:                $btnHeightXsmall, $btnHeightSmall, $btnHeight, $btnHeightLarge;
        $btnInnerHeights:           $btnHeightInnerXsmall, $btnHeightInnerSmall, $btnHeightInner, $btnHeightInnerLarge;
        $btnTextHeights:            $btnTextHeightXsmall, $btnTextHeightSmall, $btnTextHeight, $btnTextHeightLarge;

        $btnDropdownMenuSpacing:    1px + $btnShdDepth; // how far below the edge of the button do we want the menu to appear?
        $btnDdTogglePadReduce:      .65;


    //
    // caret elems (used primarily in dropdowns)
    //
        $caretColor:                zestyCrayonColor(gray, pastel1);
        $caretAlpha:                .8;


    //
    // Vertical menus (dropdowns, context menus, <select> elems, etc...)
    //
        //
        // COLORS
        //
            $menuVLinkColor:            $wf_gray;
            $menuVLinkColorHover:       $wf_blue_selectTextHover;
            $menuVLinkColorPress:       $wf_blue_selectTextPress;
            $menuVLinkColorActive:      $wf_gray_dk;

            $menuVLinkBg:               #fff;
            $menuVLinkBgHover:          $wf_blue_selectBgHover;
            $menuVLinkBgPress:          $wf_blue_selectBgPress;
            $menuVLinkBgActive:         $menuVLinkBg;

            $menuVBdColor:              zestyCrayonColor(gray, pastel2);


        //
        // SIZES
        //
            // CONSTANT (NO VARIATION)
            $menuVLinkHeaderFontSizeMod:    -1;
            $menuVBdWidth:                  1px;
            $menuVShadow:                   $shadowDefaultX 2px $shadowDefaultBlur $shadowDefaultSpread rgba($shadowDefaultColor,$shadowDefaultAlpha);
            $menuVShadowUp:                 $shadowDefaultX -2px $shadowDefaultBlur $shadowDefaultSpread rgba($shadowDefaultColor,$shadowDefaultAlpha); // reverse Y axis for dropups

            // DEFAULT
            $menuVMinWidth:                 120px;
            $menuVMaxWidth:                 500px;
            $menuVBdRadius:                 $borderRadiusBase;
            $menuVPaddingVertical:          $borderRadiusBase;
            $menuVPaddingHorizontal:        0;
            $menuVPadding:                  $menuVPaddingVertical $menuVPaddingHorizontal;

            $menuVDividerMargin:            $menuVPaddingVertical 0 ($menuVPaddingVertical - 1) 0;
            $menuVLinkPaddingHorizontal:    $paddingLargeHorizontal - $menuVBdWidth;
            $menuVLinkPaddingVertical:      $paddingXsmallVertical;
            $menuVLinkPadding:              $menuVLinkPaddingVertical $menuVLinkPaddingHorizontal;
            $menuVLinkIconMargin:           floor($menuVLinkPaddingHorizontal / 10);
            $menuVLinkFontSize:             $fontSizeMedium;
            $menuVLinkHeaderFontSize:       $menuVLinkFontSize + $menuVLinkHeaderFontSizeMod;
            $menuVLinkLineHeight:           $lineHeightSmall;
            $menuVLinkElemHeight:           ($menuVLinkPaddingVertical * 2) + ceil($menuVLinkLineHeight * $menuVLinkFontSize);

            // MEDIUM
            $menuVMinWidth_md:              160px;
            $menuVMaxWidth_md:              600px;
            $menuVBdRadius_md:              $borderRadiusBase;
            $menuVPaddingVertical_md:       $menuVBdRadius_md;
            $menuVPaddingHorizontal_md:     0;
            $menuVPadding_md:               $menuVPaddingVertical_md $menuVPaddingHorizontal_md;

            $menuVLinkPaddingHorizontal_md: $paddingLargeHorizontal + 2;
            $menuVLinkPaddingVertical_md:   $paddingSmallVertical;
            $menuVLinkPadding_md:           $menuVLinkPaddingVertical_md $menuVLinkPaddingHorizontal_md;
            $menuVLinkIconMargin_md:        floor($menuVLinkPaddingHorizontal_md / 10);
            $menuVLinkFontSize_md:          $menuVLinkFontSize;
            $menuVLinkHeaderFontSize_md:    $menuVLinkFontSize_md + $menuVLinkHeaderFontSizeMod;
            $menuVLinkLineHeight_md:        $menuVLinkLineHeight;
            $menuVLinkElemHeight_md:        ($menuVLinkPaddingVertical_md * 2) + ceil($menuVLinkLineHeight_md * $menuVLinkFontSize_md);

            // LARGE
            $menuVMinWidth_lg:              200px;
            $menuVMaxWidth_lg:              700px;
            $menuVBdRadius_lg:              $borderRadiusLarge;
            $menuVPaddingVertical_lg:       $menuVBdRadius_lg;
            $menuVPaddingHorizontal_lg:     0;
            $menuVPadding_lg:               $menuVPaddingVertical_lg $menuVPaddingHorizontal_lg;

            $menuVLinkPaddingHorizontal_lg: $paddingLargeHorizontal + 4;
            $menuVLinkPaddingVertical_lg:   $paddingSmallVertical;
            $menuVLinkPadding_lg:           $menuVLinkPaddingVertical_lg $menuVLinkPaddingHorizontal_lg;
            $menuVLinkIconMargin_lg:        floor($menuVLinkPaddingHorizontal_lg / 10);
            $menuVLinkFontSize_lg:          $fontSizeBase;
            $menuVLinkHeaderFontSize_lg:    $menuVLinkFontSize_lg + $menuVLinkHeaderFontSizeMod;
            $menuVLinkLineHeight_lg:        $lineHeightBase;
            $menuVLinkElemHeight_lg:        ($menuVLinkPaddingVertical_lg * 2) + ceil($menuVLinkLineHeight_lg * $menuVLinkFontSize_lg);


        //
        // MISC
        //
            // used on <li>, not .hitareas (mainly for panel components)
            $menuVLinkElemPadding:          $dialogContentPadding;

            $dropdownHeaderColor:           $grayLight;

            $dropdownInfoPanelBg:           $state_defaultBg;
            $dropdownInfoPanelBdWidth:      $menuVBdWidth;
            $dropdownInfoPanelBdColor:      chisel($dropdownInfoPanelBg, "dark");
            $dropdownInfoPanelHeaderColor:  darken($dropdownHeaderColor, darkness($dropdownInfoPanelBg));


    //
    // Base Navigation
    //
        $navBgDefault:              #fff;

        $navLinkPadding:            ($paddingBaseVertical + 2) ($paddingLargeVertical + 1);
        $navLinkLineHeight:         $lineHeightBase;
        $navLinkHeight:             (nth($navLinkPadding, 1) * 2) + $lineHeightBasePx;

        $navLinkColor:              $wf_gray;
        $navLinkColorHover:         zestyCrayonColor(green, main);
        $navLinkColorPress:         zestyCrayonColor(green, darker);
        $navLinkColorActive:        zestyCrayonColor(gray, darker);
        $navLinkColorDisabled:      disabledColor($navLinkColor);

        $navLinkBg:                 transparent;
        $navLinkBgHover:            transparent;
        $navLinkBgPress:            transparent;
        $navLinkBgActive:           #fff;
        $navLinkBgDisabled:         transparent;

        $navBdWidth:                1px;
        $navBdColor:                zestyCrayonColor(gray, pastel1);
        $navBdWidthEmphasized:      4px;
        $navBdColorEmphasized:      zestyCrayonColor(green, main);

        $navDividerMargin:          $menuVDividerMargin;

        // secondary navigations (e.g. breadcrumbs, pagination, etc...)
        $subNavBdWidth:             $navBdWidth;
        $subNavBdColor:             $grayLightC; // halfway between pastel1 and pastel2
        $subNavBdWidthEmphasized:   $navBdWidth;
        $subNavBdColorEmphasized:   $navBdColorEmphasized;

        $breadcrumbPadding:         $paddingBaseVertical 0;
        $breadcrumbBorderedPadding: $paddingBase;
        $breadcrumbMargin:          0 0 $lineHeightBasePx;
        $breadcrumbFontSize:        11px;
        $breadcrumbBg:              $navBgDefault;

        $breadcrumbCrumbColor:                      $wf_gray_lt2;
        $breadcrumbCrumbColorHover:                 $navLinkColorHover;
        $breadcrumbCrumbColorPress:                 $navLinkColorPress;
        $breadcrumbCrumbColorActive:                $wf_gray;
        $breadcrumbCrumbDividerColor:               $wf_gray_lt4;
        $breadcrumbCrumbSpacingH:                   10px;
        $breadcrumbCrumbDividerAngleAdjust:         2px;

        $breadcrumbCrumbPaddingLeft:                $breadcrumbCrumbSpacingH / 2;
        $breadcrumbCrumbPaddingRight:               $breadcrumbCrumbPaddingLeft - $breadcrumbCrumbDividerAngleAdjust;
        $breadcrumbCrumbMarginLeft:                 $breadcrumbCrumbPaddingLeft;
        $breadcrumbCrumbMarginRight:                $breadcrumbCrumbPaddingRight;

        // header variation of breadcrumbs
        $breadcrumbHeaderFontSize:                  nth($headingFontSizes, 2); // equivalent to an <h2>
        $breadcrumbHeaderCrumbSpacingH:             14px;
        $breadcrumbHeaderCrumbDividerAngleAdjust:   2px;
        $breadcrumbHeaderMaxHeight:                 $inputHeightBase; // to line up with search field in Wdesk Home app
        $breadcrumbFontHeight:                      round($breadcrumbHeaderFontSize * $lineHeightBase);
        $breadcrumbHeaderPaddingTop:                if($breadcrumbFontHeight >= $breadcrumbHeaderMaxHeight, 0, 2px);
        $breadcrumbHeaderPaddingBottom:             1 + $breadcrumbHeaderMaxHeight - ceil($breadcrumbHeaderFontSize * $lineHeightBase) - $breadcrumbHeaderPaddingTop;
        $breadcrumbHeaderCrumbPaddingLeft:          $breadcrumbHeaderCrumbSpacingH / 2;
        $breadcrumbHeaderCrumbPaddingRight:         $breadcrumbHeaderCrumbPaddingLeft - $breadcrumbHeaderCrumbDividerAngleAdjust;
        $breadcrumbHeaderCrumbMarginLeft:           $breadcrumbHeaderCrumbPaddingLeft;
        $breadcrumbHeaderCrumbMarginRight:          $breadcrumbHeaderCrumbPaddingRight;

        $navJustifiedHalvedWidth:   47%;
        $navJustifiedHalvedMargin:  round(50% - ($navJustifiedHalvedWidth)) * 2;


    //
    // Tabbed Navigation
    //
        $navTabSpacing:             3px;

        $navTabBdColor:             $navBdColor;
        $navTabBdWidth:             $navBdWidth;
        $navTabBgActive:            $navLinkBgActive;

        $navTabContentSpacing:      $lineHeightBasePx;
        $navTabVerticalMinWidth:    74px; // for .tabs-left and .tabs-right


    //
    // Pills / Tabbars
    //
        $pillTabSpacing:            2px;
        $pillTabPadding:            $paddingBaseGibson;

        $pillTabSpacingStacked:     $pillTabSpacing * 2;

        $pillTabLinkColor:          #fff;
        $pillTabLinkColorHover:     #fff;
        $pillTabLinkColorPress:     #fff;
        $pillTabLinkColorActive:    #fff;
        $pillTabLinkColorDisabled:  disabledColor($pillTabLinkColor);

        $pillTabLinkBg:             zestyCrayonColor(gray, pastel1);
        $pillTabLinkBgHover:        zestyCrayonColor(green, lighter);
        $pillTabLinkBgPress:        zestyCrayonColor(green, darker);
        $pillTabLinkBgActive:       zestyCrayonColor(green, main);
        $pillTabLinkBgDisabled:     disabledColor($pillTabLinkBg);

        $pillTabLinkBdWidth:        0;


    //
    // Nav List
    //
        $navListLinkColor:          $navLinkColor;
        $navListLinkColorHover:     $menuVLinkColorHover;
        $navListLinkColorPress:     $menuVLinkColorPress;
        $navListLinkColorActive:    zestyCrayonColor(green, main);
        $navListLinkColorDisabled:  $navLinkColorDisabled;

        $navListLinkBg:             $bodyBg;
        $navListLinkBgHover:        $menuVLinkBgHover;
        $navListLinkBgPress:        $menuVLinkBgPress;
        $navListLinkBgActive:       transparent;
        $navListLinkBgDisabled:     $navLinkBgDisabled;

        $navListBdWidth:            1px;
        $navListBdColor:            $menuVBdColor;

        $navListLinkPadding:        $navLinkPadding;
        $navListLinkFontSize:       $fontSizeBase;
        $navListLinkHeight:         (nth($navListLinkPadding, 1) * 2) + ceil($menuVLinkLineHeight * $menuVLinkFontSize);

        // Collapsible nav-list
        $navListCaretColorFallback:             zestyCrayonColor(gray, pastel2);
        $navListCaretDarkness:                  lightness($navListCaretColorFallback);
        $navListCaretColor:                     rgba($black, ((100 - $navListCaretDarkness) / 100) );
        $navListCaretColorActive:               $navListLinkColor;
        $navListCaretContainerWidth:            $lineHeightBasePx;
        $navListCaretContainerHeight:           $navListLinkHeight;
        $navListCaretWidth:                     $caretWidth;
        $navListCaretHeight:                    $caretHeight;
        $navListCaretSizeRatio:                 $navListCaretWidth / $navListCaretHeight;
        $navListCaretSizeDifferential:          $navListCaretWidth - $navListCaretHeight;
        $navListCaretMarginVertical:            floor(($navListCaretContainerHeight - $navListCaretHeight) / 2) - 1;
        $navListCaretMarginHorizontal:          floor(($navListCaretContainerWidth - $navListCaretWidth) / 2) - $navListCaretSizeDifferential;
        $navListCaretMarginVerticalCollapsed:   $navListCaretMarginVertical - $navListCaretSizeDifferential;
        $navListCaretMarginHorizontalCollapsed: $navListCaretMarginHorizontal + $navListCaretSizeDifferential;

        // how far to offset to the right of the caret?
        $navListLinkCollapsingPaddingLeft:      $navListCaretContainerWidth + 2px;
        // horizontal space is at a premium... we only need a little pad on the right edge
        $navListLinkCollapsingPaddingRight:     $navListCaretWidth;

        $navListGroupBdSpacing:                 round(nth($navLinkPadding, 1) * 1.5);


    //
    // Navbar
    //
        // Basics of a navbar
        $navbarPadTop:                      4px;
        $navbarPadRight:                    3px; // need something here so that dropdown menu shadow isn't clipped off the edge of the viewport
        $navbarPadBot:                      6px;
        $navbarPadLeft:                     12px;
        $navbarPadding:                     $navbarPadTop $navbarPadRight $navbarPadBot $navbarPadLeft;

        $navbarEdgeOffset:                  $borderRadiusBase; // if a .nav is .pull-right or .pull-left... we want it to not intersect with any rounded corners
        $navbarFontSize:                    $fontSizeBase;
        $navbarColor:                       zestyCrayonColor(gray, main);
        $navbarBg:                          #fff;
        $navbarBdWidth:                     $navBdWidth;
        $navbarBdColor:                     zestyCrayonColor(gray, pastel2);
        $navbarBdRadius:                    $borderRadiusBase;

        $navbarHeight:                      34px;
        $navbarInnerHeight:                 $navbarHeight - ($navbarBdWidth * 2);
        $navbarFixedInnerHeight:            $navbarHeight - $navbarBdWidth;

        // Navbar links
        $navbarLinkHeight:                  $navbarInnerHeight;
        $navbarLinkLineHeight:              $navbarLinkHeight;
        $navbarFixedLinkHeight:             $navbarFixedInnerHeight;
        $navbarFixedLinkLineHeight:         $navbarFixedLinkHeight;

        $navbarLinkPaddingVertical:         0;
        $navbarLinkPaddingHorizontal:       $paddingSmallHorizontal;
        $navbarLinkColor:                   zestyCrayonColor(gray, main);
        $navbarLinkColorHover:              $navLinkColorHover;
        $navbarLinkColorPress:              $navLinkColorPress;
        $navbarLinkColorActive:             $navLinkColorActive;
        $navbarLinkColorDisabled:           $navLinkColorDisabled;

        $navbarLinkBg:                      $navLinkBg;
        $navbarLinkBgHover:                 $navLinkBgHover;
        $navbarLinkBgPress:                 $navLinkBgPress;
        $navbarLinkBgActive:                $navLinkBgActive;
        $navbarLinkBgDisabled:              $navLinkBgDisabled;

        // Navbar brand label
        $navbarBrandHeight:                 $navbarHeight - ($navbarPadTop + $navbarPadBot);
        $navbarBrandColor:                  $navbarLinkColor;
        $navbarBrandColorHover:             $navbarLinkColorHover;
        $navbarBrandBgHover:                $navbarLinkBgHover;
        $navbarBrandLogoMaxHeight:          0;
        @if $useWebSkinImgDir == true {
            $navbarBrandLogoMaxHeight: image-height($wdeskLogoUrl) !global;
        }
        $navbarBrandLogoOffsetTop:          (round($navbarHeight - $navbarBrandLogoMaxHeight) / 2) - 1;
        $navbarBrandLowercaseOffset:        $navbarHeight - ($navbarBrandLogoMaxHeight + $navbarBrandLogoOffsetTop); // how much do we need to offset the line height by to match up with the "desk" in Wdesk?

        // Navbar nav-tab links
        $navbarTabOffsetV:                  0;
        $navbarTabMenuHeight:               $navbarHeight - $navbarTabOffsetV - $navbarBdWidth;

        // make sure any adjacent .active > .hitarea green borders are "overlapped" by the open dropdown-menu
        $navbarDropdownMenuOverlapShadow:   0 -#{$navBdWidthEmphasized} 0 $navbarBg;
        $navbarDropupMenuOverlapShadow:     0 #{$navBdWidthEmphasized} 0 $navbarBg;
        $navbarDropdownCaretMargin:         round($navbarHeight / 2) - $caretHeight;

        // when a responsive navbar nav is open... it drops a shadow
        $navCollapseDropShadow:             0 3px 5px 0 rgba($shadowDefaultColor, .25);

        // "Global Help" Menu
        $navbarGlobalHelpIconColor:         zestyCrayonColor(purple, main);
        $navbarGlobalHelpIconColorHover:    darken($navbarGlobalHelpIconColor, 10);


    //
    // "Ribbon" navbar sub-navigation
    //
        $navRibbonBg:                   $navbarBg;
        $navRibbonGroupDividerBdColor:  $navbarBdColor;
        $navRibbonGroupDividerBdWidth:  1px;
        $navRibbonPadBottom:            2px;
        $navRibbonPadTop:               6px;
        $navRibbonPadding:              $navRibbonPadTop $navbarPadLeft $navRibbonPadBottom;
        $navRibbonMinHeight:            60px;
        $navRibbonInnerHeight:          $navRibbonMinHeight - ($navRibbonPadTop + $navRibbonPadBottom);
        $navRibbonButtonPadTop:         $paddingBaseVertical + $navRibbonPadTop;
        $navRibbonButtonPadBottom:      $paddingBaseVertical + $navRibbonPadBottom;
        $navRibbonButtonPadX:           $paddingBaseHorizontal;
        $navRibbonButtonPadXCnd:        $paddingBaseHorizontal / 2;

        // Navbar tab links (e.g. ribbon headers)
        $navbarRibbonTabLinkBdWidth:        $navBdWidthEmphasized;
        $navbarRibbonTabLinkBdColorActive:  $navBdColorEmphasized;
        $navbarRibbonTabLinkBgActive:       $navLinkBgActive;
        $navbarRibbonTabLinkColorActive:    $navLinkColorActive;
        // we want the links to line up to the baseline of the wdesk logo
        // (plus add a little room for the big bottom border of active links)
        // so we need to figure out where the bottom edge of the image is
        $navbarRibbonTabLinkOffset:      $navbarHeight - ($navbarHeight - $navbarBrandLogoMaxHeight) - ($navbarRibbonTabLinkBdWidth - $navbarBdWidth) - $navbarFontSize + $navbarBrandLowercaseOffset - $gibsonBaselineOffset;
        $navbarRibbonTabLinkLineHeight:  $navbarLinkLineHeight + $navbarRibbonTabLinkOffset;


    //
    // Nav "Block" navbar links
    //
    // e.g. tablet viewer navbar buttons
    //
        $navbarBlockLinkBgHoverTint:    .1;
        $navbarBlockLinkColor:          $navbarLinkColor;
        $navbarBlockLinkColorHover:     shadeShift($navbarLinkColor, -($navbarBlockLinkBgHoverTint * 100%));
        $navbarBlockLinkColorPress:     #fff;
        $navbarBlockLinkColorActive:    $navbarBlockLinkColorPress;

        $navbarBlockLinkBg:             transparent;
        $navbarBlockLinkBgHoverFallback: mix($black, $navbarBg, percentage($navbarBlockLinkBgHoverTint));
        $navbarBlockLinkBgHover:        rgba($black, $navbarBlockLinkBgHoverTint);
        $navbarBlockLinkBgPress:        $navBdColorEmphasized;
        $navbarBlockLinkBgActive:       $navbarBlockLinkBgPress;


    //
    // Status bar - TODO: deprecate in v0.5.0
    //
        $globalStatusBarHeight:             24px;


    //
    // Labels & Badges
    //
        $labelPadding:              .18em .54em;

        $labelColor:                #fff;
        $labelColorHover:           #fff;

        $labelBg:                   $grayLight;
        $labelBgSuccess:            $state_success;
        $labelBgInfo:               $state_alt;
        $labelBgWarning:            $state_warning;
        $labelBgDanger:             $state_error;

        $badgeFontSize:             12px;
        $badgeFontSizeXsmall:       11px;
        $badgePadding:              3px 7px;
        $badgePaddingSmall:         2px 6px;
        $badgePaddingXsmall:        1px 5px 2px 4px;
        $badgeHeight:               $badgeFontSize + (stripUnit(nth($badgePadding, 1)) * 2);
        $badgeHeightSmall:          $badgeFontSize + (stripUnit(nth($badgePaddingSmall, 1)) * 2);
        $badgeHeightXsmall:         $badgeFontSizeXsmall + (stripUnit(nth($badgePaddingXsmall, 1)) * 2);
        $badgeMinWidth:             10px;
        $badgeHspacing:             (stripUnit(nth($paddingBase, 2)) / 2) + 0px;

        $badgeColor:                #fff;
        $badgeBg:                   $grayLight;
        $badgeColorHover:           #fff;


    //
    // Tooltips and popovers
    //
        // Used for modal dialogs
        $dialogHeaderMargin:        0 0 $dialogContentPadding 0;
        $dialogHeaderPadding:       $dialogContentPadding * 2;
        $dialogHeaderFontSize:      $lineHeightBasePx;
        $dialogHeaderLineHeight:    $lineHeightBasePx;
        $dialogHeaderMinHeight:     52px;

        // Used for dialogs like alerts, popovers, etc...
        $dialogHeaderMarginSm:      $dialogHeaderMargin;
        $dialogHeaderPaddingSm:     $dialogContentPadding;
        $dialogHeaderFontSizeSm:    16px;
        $dialogHeaderLineHeightSm:  $dialogHeaderLineHeight;
        $dialogFooterPaddingSm:     $dialogHeaderPaddingSm;
        $dialogBodyPaddingSm:       $dialogContentPadding * 4; // actually is a larger amount of padding to bring focus to the small amount of content
        $dialogHeaderMinHeightSm:   29px;

        $dialogBodyPaddingXs:       $dialogContentPadding;
        $dialogHeaderPaddingXs:     $paddingSmallVertical $dialogBodyPaddingXs;
        $dialogHeaderFontSizeXs:    $fontSizeBase;
        $dialogHeaderFontWeightXs:  normal;

        $dialogColor:               $textColor;
        $dialogBg:                  $white;
        $dialogBdWidth:             1px;
        $dialogBdColor:             $wf_gray_lt4;
        $dialogBdRadius:            $borderRadiusBase;
        $dialogPadding:             $dialogBdWidth; // to accomodate background-clip: padding-box; and border-radius
        $dialogShadow:              $boxShadowDefault;

        $dialogActionsBdColor:      lighten($dialogBdColor, 10%);

        $tooltipBg:                 $wf_gray_dk;
        $tooltipColor:              $white;
        $tooltipBdColor:            $tooltipBg;
        $tooltipBdRadius:           $borderRadiusSmall;
        $tooltipBdWidth:            $dialogBdWidth;

        // gray variant (annotations)
        $tooltipBgGray:             $wf_gray_lt6;

        $tooltipMaxWidth:           300px;
        $tooltipPadding:            ($dialogContentPadding / 2) $dialogContentPadding;

        $tooltipArrowWidth:         5px;
        $tooltipArrowOuterWidth:    $tooltipArrowWidth + $dialogBdWidth;
        $tooltipArrowColor:         $tooltipBg;
        $tooltipArrowOuterColor:    $dialogBdColor;

        $arrowDirections:           'top', 'right', 'bottom', 'left';

        $popoverMaxWidth:           300px;
        $popoverMinWidth:           170px;

        $popoverArrowWidth:         $dialogContentPadding + ($dialogBdWidth * 2);
        $popoverArrowOuterWidth:    $popoverArrowWidth + $dialogBdWidth;
        $popoverArrowColor:         $dialogBg;
        $popoverArrowOuterColor:    $dialogBdColor;

        $popoverTitleMargin:        $dialogHeaderMarginSm;
        $popoverTitlePadding:       $dialogHeaderPaddingSm;
        $popoverTitleFontSize:      $dialogHeaderFontSizeSm;
        $popoverTitleBg:            $dialogBg;
        $popoverTitleBdWidth:       $dialogBdWidth;
        $popoverTitleBdColor:       $dialogBdColor;

        // vertical nav lists in popovers
        $popoverNavListItemPadding: $menuVLinkElemPadding;
        $popoverNavListItemHeight:  ($popoverNavListItemPadding * 2) + ceil($menuVLinkLineHeight * $menuVLinkFontSize);

        // navbars in popover headers
        $popoverNavbarPaddingBottom:$dialogHeaderPadding;
        $popoverNavbarHeight:       $dialogHeaderMinHeight - $dialogContentPadding;
        $popoverNavbarBtnWidth:     $popoverNavbarHeight + $dialogContentPadding;

        // NOTE POPOVERS
        $popoverCommentWidth:           300px;
        $popoverCommentInnerWidth:      $popoverCommentWidth - ($dialogContentPadding * 2);
        $popoverCommentHeight:          $dialogHeaderMinHeight + $defaultCommentTextareaHeight + ($dialogContentPadding * 2);
        $popoverCommentTitleFontSize:   $fontSizeBase;

        $popoverCommentTypeToggleWidth: checkboxSwitchVal(
                                            $returnWhat: 'width',
                                            $defaultText: 'private',
                                            $checkedText: 'shared',
                                            $sizeVariation: 'xs'
                                        );

        $popoverCommentThreadActionsOffsetRight:    $caretOnlyBtnWidthXsmall + 4px; // how much room does the first comment's timestamp need on the right side
        $popoverCommentThreadHeaderLineHeight:      $btnHeightXsmall; // vertical centering with comment type toggle switch
        $popoverCommentThreadHeaderHeight:          $dialogContentPadding + $popoverCommentThreadHeaderLineHeight + 5; // not sure why the extra 5px is needed
        $popoverCommentTimestampMaxWidth:           90px; // NOTE: If you change the meta font size... this will have to increase.
        $popoverCommentTitleWidthNew:               $popoverCommentInnerWidth - $popoverCommentTypeToggleWidth;
        $popoverCommentTitleWidthExisting:          $popoverCommentInnerWidth - $popoverCommentThreadActionsOffsetRight - $popoverCommentTimestampMaxWidth;
        $popoverCommentReplyNameWidth:              $popoverCommentInnerWidth - $popoverCommentTimestampMaxWidth;

        $popoverCommentThreadOverlayBg:             lighten($dialogBackdropBg, 10);
        $popoverCommentThreadOverlayAlpha:          .6; // when a thread/comment confirmation modal is open ("wash out" the rest of the thread content)
        $popoverCommentThreadClosedOverlayAlpha:    .3; // when thread is closed


    //
    // Modals ("dialog boxes")
    //
        $modalInnerPadding:                 $dialogContentPadding * 2;
        $modalBodyFirstPaddingTop:          $modalInnerPadding + 6; // little more top padding to keep the header spaced properly
        $modalBodyContentPaddingHorizontal: $modalInnerPadding * 2;
        $modalDialogOffset:                 $modalInnerPadding * 2;
        $modalDialogWidth:                  694px;
        $modalContentHeight:                250px;

        $modalActionsPaddingVertical:       $modalInnerPadding;
        $modalActionsPaddingHorizontal:     $modalActionsPaddingVertical * 2;

        $modalFooterGutterTop:              $modalActionsPaddingVertical;
        $modalFooterGutterBot:              $modalActionsPaddingVertical;
        $modalFooterHeight:                 $modalFooterGutterTop + $modalFooterGutterBot + $btnHeight;

        $modalTitleBdWidth:                 $dialogBdWidth;
        $modalTitleBdColor:                 zestyCrayonColor(gray, pastel1);

        // global wdesk session timeout modal dialog vars
        // .session-timeout-dialog
        $modalSessionTimeoutHeight: 116px + $dialogHeaderMinHeight; // must use a fixed height if you want it vertically centered without js


    //
    // Alerts ("dialog boxes")
    //
        $closeBtnFontSize:          20px;
        $closeBtnAlpha:             .2;
        $closeBtnAlphaHover:        .5;
        $closeBtnColor:             $black;
        $clearSearchFontSize:       $closeBtnFontSize;
        $closeBtnPaddingBottom:     4px;

        $alertBdRadius:             $dialogBdRadius;
        $alertBdWidth:              1px;

        $alertPaddingVertical:      $dialogContentPadding * 2;
        $alertPaddingHorizontal:    $dialogContentPadding * 2;
        $alertPadding:              $alertPaddingVertical $alertPaddingHorizontal;

        $alertPaddingSmallVertical: $paddingBaseVertical;
        $alertPaddingSmall:         $alertPaddingSmallVertical $alertPaddingHorizontal;

        $alertLinkFontWeight:       bold;
        $alertLinkDarken:           10%;

        $alertCloseWidth:           $touchUIhitarea;
        $alertCloseHeight:          $lineHeightBasePx + ($alertPaddingVertical * 2);
        $alertBlockCloseHeight:     $dialogHeaderMinHeightSm + $alertPaddingVertical - $alertBdWidth;


    //
    // Tables
    //
        $tableBg:                   inherit;            // overall background-color
        $tableBgAccent:             $wf_gray_lt6;       // for striping
        $tableBgHover:              $wf_blue_selectBgHover;    // for hover
        $tableBgPress:              $wf_blue_selectBgPress; // for selectable "press"
        $tableBgActive:             $wf_blue_selectBgActive; // for "selected"

        // sorted table row colors
        $tableBgAccentDarkness:     lightness($bodyBg) - lightness($tableBgAccent);

        // borders
        $tableBdColor:              $wf_gray_lt4;      // table and cell border
        $tableBdWidth:              1px;
        $tableBdRadius:             0;
        $tableStripedRowBdWidth:    0; // do we have borders in addition to the bg color "striping"?

        // spacing
        $tableCellPadding:          $paddingBaseVertical + ($tableBdWidth * 2);
        $tableCellPadX:             $tableCellPadding;
        $tableCellPadY:             $tableCellPadding;
        $tableCellPad:              $tableCellPadding $tableCellPadding;

        $tableCellPadCnd:           $paddingSmallVertical;
        $tableCellPadXCnd:          $tableCellPadCnd;
        $tableCellPadYCnd:          $tableCellPadCnd;

        $tableCellHeight:           floor($fontSizeBase * $lineHeightBase) + ($tableCellPadding * 2);
        $tableCellHeightCnd:        floor($fontSizeBase * $lineHeightBase) + ($tableCellPadCnd * 2);

        // headers
        $tableTheadBdColor:         $wf_gray_lt2;
        $tableTheadColor:           $tableTheadBdColor;

        // a bordered table needs a bg color for the <thead> elem, otherwise it just looks ridonc
        $tableBorderedTheadColor:   zestyCrayonColor(gray, main);
        $tableBorderedTheadBg:      $tableBgAccent;

        $tableHeaderCellColor:      $tableTheadColor;
        $tableHeaderCellPad:        ($tableCellPadY + 1) $tableCellPadX round($tableCellPadY / 2);
        $tableHeaderCellPadCnd:     round(nth($tableHeaderCellPad, 1) / 2) round($tableCellPadX / 2) round(nth($tableHeaderCellPad, 3) / 2);
        // how much difference is there between the top header pad and the bottom?
        $tableHeaderCellPadOffset:      nth($tableHeaderCellPad, 1) - nth($tableHeaderCellPad, 3);
        $tableHeaderCellPadOffsetCnd:   nth($tableHeaderCellPadCnd, 1) - nth($tableHeaderCellPadCnd, 3);
        // heights
        $tableHeaderCellHeight:         $lineHeightBasePx + nth($tableHeaderCellPad, 1) + nth($tableHeaderCellPad, 3);
        $tableHeaderCellHeightCnd:      $lineHeightBasePx + nth($tableHeaderCellPadCnd, 1) + nth($tableHeaderCellPadCnd, 3);
        // heights without the padding
        $tableHeaderCellHeightInner:    $tableHeaderCellHeight - nth($tableHeaderCellPad, 1) - nth($tableHeaderCellPad, 3);
        $tableHeaderCellHeightCndInner: $tableHeaderCellHeightCnd - nth($tableHeaderCellPadCnd, 1) - nth($tableHeaderCellPadCnd, 3);

        // content
        $tableCellFont:             $fontFamilyBase;
        $tableCellColor:            $wf_gray;
        $tableCellColorHover:       $wf_blue_selectTextHover;
        $tableCellColorPress:       $wf_blue_selectTextPress;
        $tableCellColorActive:      $wf_blue_selectTextActive;

        // table sorting
        $tableSortTheadColorHover:   $wf_green;
        $tableSortTheadColorSorted:  $tableSortTheadColorHover;

        $tableSortCaretColor:        $tableTheadColor;
        $tableSortCaretColorHover:   $tableSortTheadColorHover;
        $tableSortCaretColorSorted:  $tableSortCaretColorHover;

        $tableSortCaretAlpha:       0; // when not active
        $tableSortCaretAlphaHover:  1;
        $tableSortCaretAlphaSorted: 1;

        // table hover behavior
        $tableTransitionSpeed:      .1s;
        $tableTransitionProperties: "opacity color width height background-color border-top-color border-right-color border-bottom-color border-left-color";


    //
    // Panels ("dialog boxes")
    //
        $panelBg:                       $bodyBg;
        $panelInnerBdColor:             $tableBdColor;
        $panelBdWidth:                  $dialogBdWidth;
        $panelBdRadius:                 0;
        $panelFooterBg:                 $panelHeadingBgDefault;
        $panelFooterPaddingVertical:    $dialogHeaderPaddingSm;
        $panelBodyPadding:              $dialogContentPadding * 2;
        $panelTitleFontSize:            $heading2FontSize; // equivalent of <h4>
        $panelHeadingLineHeight:        ($panelTitleFontSize / $fontSizeBase) + ($headingsLineHeight - 1); // make sure that panel-headings without panel-title elems are the same height as ones that do
        $panelHeadingPaddingVertical:   $dialogHeaderPaddingSm;
        $panelHeadingHeight:            floor($panelTitleFontSize * $panelHeadingLineHeight) + ($panelHeadingPaddingVertical * 2) - $panelBdWidth;
        $panelHeadingToggleHoverDarken: 5;

        $panelShadowOffset:         0 1px;
        $panelShadowBlur:           1px;
        $panelShadowSpread:         0;
        $panelShadowColor:          "0, 0, 0";
        $panelShadowAlpha:          .05;
        $panelShadow:               "#{$panelShadowOffset} #{$panelShadowBlur} #{$panelShadowSpread} rgba(#{$panelShadowColor}, #{$panelShadowAlpha})";
        $panelFocusShadow:          "#{$panelShadowOffset} #{$panelShadowBlur} #{$panelShadowSpread + 1px} rgba(#{$panelShadowColor}, #{$panelShadowAlpha * 2})";

        // condensed version of a panel
        $panelCnBodyPadding:        $dialogBodyPaddingXs;
        $panelCnTitleFontSize:      $heading3FontSize; // equivalent of <h5>
        $panelCnHeadingPadding:     $dialogHeaderPaddingXs;
        $panelCnHeadingLineHeight:  ($panelCnTitleFontSize / $fontSizeBase) + ($headingsLineHeight - 1);
        $panelCnHeadingHeight:      ceil($panelCnTitleFontSize * $panelCnHeadingLineHeight) + (nth($panelCnHeadingPadding, 1) * 2);
        $panelCnBdRadius:           if($panelBdRadius > 0, $borderRadiusSmall, 0);

    //
    // PANEL COMMENTS
    //
        $panelCommentBg:                $bodyBg;

        //
        // HEADING
        //
            // First comment in a thread
            $panelThreadHeadingHeight:          $panelCnHeadingHeight;
            $panelThreadTitleMinHeight:         $fontSizeBase + 2px; // because of the overflow: hidden, we ned this to ensure that drop-case chars are not clipped
            $panelThreadHeadingPadding:         gibsonPadOffset($panelCnHeadingPadding);

            $panelThreadMetaOffsetTop:          round(($panelCnHeadingHeight - $fontSizeSmall) / 2);
            $panelThreadActionsOffsetRt:        $panelBdWidth * 2; // just enough to keep the border effect on active from running-into the panel border
            $panelThreadActionsBtnIconWidth:    $iconMediumSize;
            $panelThreadActionsBtnPadX:         round(($panelCnHeadingHeight - $panelThreadActionsBtnIconWidth) / 2);
            $panelThreadActionsBtnWidth:        $panelThreadActionsBtnIconWidth + ($panelThreadActionsBtnPadX * 2);

            // Adjustments for comments within thread other than the first one
            $panelThreadReplyHeadingPadTop:     round($panelCnBodyPadding * 1.5); // space out comments a little more
            $panelThreadReplyHeadingPadBot:     nth($panelThreadHeadingPadding, 1);
            $panelThreadReplyHeadingPadding:    $panelThreadReplyHeadingPadTop nth($panelCnHeadingPadding, 2) $panelThreadReplyHeadingPadBot;
            $panelThreadReplyHeadingHeight:     $panelCnHeadingHeight - nth($panelThreadHeadingPadding, 1) + $panelThreadReplyHeadingPadTop;
            $panelThreadReplyMetaOffsetTop:     round(($panelThreadReplyHeadingHeight - $fontSizeSmall) / 2) + 3; // don't know why this is off by 3px

        //
        // BODY
        //
            $panelCommentBodyMaxHeight:         120px;
            $panelCommentBodyMinHeight:         round($panelCommentBodyMaxHeight / 2);

            $panelCommentReplyBodyMinHeight:    $inputHeightBase;

            // keep scrollbar all the way to the right in "saved" comment state
            $panelCommentBodyMarginRt:          -$panelCnBodyPadding;

            // pad on the right side to match width of actions btn
            // reduce by the width of the scrollbar so text
            // doesn't jump to the next line without just cause.
            $panelCommentTextareaPadRt:         $panelCnHeadingHeight + $panelThreadActionsOffsetRt;

        //
        // OVERLAYS
        //
            $panelCommentThreadOverlayBg:       $panelCommentBg;
            $panelCommentThreadOverlayAlpha:    .5;


    //
    // GLOBAL JOBS LIST PANEL
    //
        $jobPanelWidth:                480px;
        $jobPanelRtOffset:             36px;

        // reverse contrast colors
        $jobPanelTitleColor:           $white;
        $jobPanelHeadingBg:            $wf_gray;
        $jobPanelHeadingBgWarning:     $wf_orange;
        $jobPanelHeadingBgSuccess:     $wf_green;

        $jobPanelHeadingIconSize:      $baseIconSize;
        $jobPanelHeadingIconVOffset:   round(($panelCnHeadingHeight - $jobPanelHeadingIconSize) / 2);

        $jobPanelHeadingCloseBtnWidth: $panelCnHeadingHeight;

        // Global job item
        $jobItemPadding:                $panelCnBodyPadding;
        $jobItemHeight:                 48px; // from UX spec
        $jobItemProgressBarWidth:       140px;
        $jobItemActionWidth:            60px; // when progress is done - .btn-link presented


    //
    // Forms
    //
        $formBdWidth:                       1px;
        $formBdColor:                       $wf_gray_lt4;

        $inputColorPlaceholder:             $grayLight;
        $inputColor:                        lighten($wf_gray, 7); // #6b6b6b
        $inputColorFocus:                   $wf_gray;
        $inputColorDisabled:                $wf_gray_lt4;

        $inputBdColor:                      $wf_gray_lt5;
        $inputBdColorFocus:                 zestyCrayonColor($inputBdColorGroupFocus, lighter);
        $inputBdColorDisabled:              $wf_gray_lt5;

        $inputBg:                           $white;
        $inputBgDisabled:                   darken($inputBg, 2%);

        $inputBdRadius:                     $borderRadiusBase;
        $inputBdRadiusSearch:               20px;

        $inputShadowAlpha:                  .075;
        $inputShadowInner:                  inset 0 1px 1px rgba(0, 0, 0, $inputShadowAlpha);

        $inputPaddingVerticalMSIE:          0;

        $cboxRadioSpacing:                  $lineHeightBasePx;
        $radioCboxTopMargin:                4px;
        $selectCaretSize:                   $caretWidth;

        // "pretty" radios/checkboxes
        $cboxBdColor:                       $inputBdColor;
        $cboxBdColorFocus:                  $inputBdColorFocus;
        $cboxBgColorChecked:                $linkColor;

        // px values we'll use to comput our EMS below
        $cboxTargetHeightPx:                $fontSizeBase + 2;
        $radioIndicatorTargetSize:          round($cboxTargetHeightPx / 2);
        $cboxDefaultParentFontSize:         $fontSizeBase;

        // everything below this comment is in EMS
        $radioActiveInset:                  pxtoem($radioIndicatorTargetSize, $cboxDefaultParentFontSize);
        $cboxHeight:                        pxtoem($cboxTargetHeightPx, $cboxDefaultParentFontSize);
        $cboxWidth:                         $cboxHeight;
        $cboxRadioTopOffset:                $cboxHeight - 1; // centered on line height
        $radioIndicatorOffsetLeft:          $radioActiveInset / 2;
        $radioIndicatorOffsetTop:           $cboxRadioTopOffset + $radioIndicatorOffsetLeft;
        $radioIndicatorSize:                $cboxWidth - $radioActiveInset;

        $horizontalComponentLblRightPad:    $lineHeightBasePx;
        $horizontalComponentLblTopPad:      ($inputHeightBase - $lineHeightBasePx) / 2;
        $formActionsBackground:             $state_defaultBg;

        $legendFontSize:                    $heading1FontSize;
        $legendFontFace:                    $headingsFontFace;
        $legendColor:                       $headingsColor;
        $legendMarginBottom:                $lineHeightBasePx;


    //
    // List group (variant of nav-list)
    //
        $listGroupBg:                       $bodyBg !default;
        $listGroupBdWidth:                  1px !default;
        $listGroupBd:                       zestyCrayonColor(gray, pastel2) !default;
        $listGroupBdRadius:                 0 !default;

        $listGroupBgHover:                  $navListLinkBgHover !default;
        $listGroupColorHover:               $navListLinkColorHover !default;
        $listGroupBgPress:                  $navListLinkBgPress !default;
        $listGroupColorPress:               $navListLinkColorPress !default;
        $listGroupBgActive:                 $navListLinkBgActive !default;
        $listGroupColorActive:              $navListLinkColorActive !default;
        $listGroupBdActive:                 if($listGroupBgActive == $listGroupBg, $listGroupBd, $listGroupBgActive) !default;

        $listGroupLinkColor:                $navLinkColor !default;
        $listGroupLinkHeadingColor:         zestyCrayonColor(gray, main) !default;


    //
    // Datepicker
    //
        // Sizes
        $dpDaySize:                     30px;
        $dpContentPad:                  2px;
        $dpMinWidth:                    ($dpDaySize * 7) + ($dpContentPad * 2);
        $dpSwitchWidth:                 $dpMinWidth - ($dpDaySize * 2); // clickable area between the < and > arrows
        $dpMoYrSize:                    .25; // will be used in percentage widths
        $dpMoYrSizePx:                  round($dpMinWidth * $dpMoYrSize);

        $dpDayFontSize:                 $fontSizeMedium;
        $dpCwFontSize:                  $fontSizeSmall;

        // Colors
        $dpBg:                          $dialogBg;
        $dpBdRadius:                    $dialogBdRadius;
        $dpBdColor:                     $popoverTitleBdColor; // so that the bottom border of the header matches "dialog" headers
        $dpInnerBdColor:                lighten($dialogBdColor, 15); // slightly lighter than popover container border
        $dpDowColor:                    $wf_gray_lt2;

        // Clickable elem colors
        $dpLinkBg:                      transparent;
        $dpLinkBgHover:                 $tableBgHover;
        $dpLinkBgPress:                 $tableBgPress;
        $dpLinkBgActive:                $tableBgActive;
        $dpLinkBgDisabled:              $dpLinkBg;

        $dpLinkColor:                   $tableCellColor;
        $dpLinkColorHover:              $tableCellColorHover;
        $dpLinkColorPress:              $tableCellColorPress;
        $dpLinkColorActive:             $tableCellColorActive;
        $dpLinkColorDisabled:           $inputColorDisabled;

        $dpLinkOldBg:                   $state_defaultBg;
        $dpLinkTodayBg:                 $wf_yellow_highlight;

        $dpLinkOldColor:                $wf_gray_lt3;
        $dpLinkTodayColor:              $dpLinkColor;


    //
    // Miscellaneous
    //
        // Code
        $codeBdRadius:                  $borderRadiusBase;
        $codeBg:                        #f9f2f4;
        $codeBd:                        darken($codeBg, 3);
        $codeColor:                     #c7254e;

        $kbdBg:                         $wf_gray_dk;
        $kbdColor:                      $white;

        $preBg:                         #f5f5f5;
        $preColor:                      $grayDark;
        $preBdColor:                    #ccc;
        $preScrollableMaxHeight:        340px;

        // Progress bars
        $progressBg:                    $wf_gray_lt5;
        $progressBarHeight:             $lineHeightBasePx;
        $progressBarBdRadius:           $borderRadiusSmall;
        $progressBarBgSize:             $progressBarHeight* 2;
        $progressBarGifUrl:             "animated/wdesk-barberpole_default.gif";

        $progressBarLblFontSize:        $fontSizeSmall;
        $progressBarLblFontWeight:      bold;
        $progressBarLblColor:           $white;
        $progressBarLblShdColor:        $wf_green_dk;
        $progressBarLblShdAlpha:        .8;

        $progressBarHeightSm:           round($progressBarHeight / 1.5);
        $progressBarBdRadiusSm:         $borderRadiusXsmall;
        $progressBarLblFontSizeSm:      $fontSizeXsmall;

        $progressBarHeightXs:           round($progressBarHeight / 2);
        $progressBarBdRadiusXs:         0;
        $progressBarLblFontSizeXs:      $progressBarHeightXs;

        // Progress spinners
        $spinnerColor:                  $wf_gray_lt;
        $spinnerAlphaBase:              .25;
        $spinnerAlphaOn:                .75;
        $spinnerSpeed:                  .75s;
        $spinnerLabelColor:             mix($spinnerColor, $bodyBg, percentage(($spinnerAlphaBase + $spinnerAlphaOn) / 2));
        $spinnerLabelFontSize:          $fontSizeSmall;

        // Hr borders
        $hrBdWidth:                     1px;
        $hrBdColor:                     $grayLight;

        // Wells
        $wellBackground:                $state_defaultBg;
        $wellBdWidth:                   1px;
        $wellBdColor:                   darken($wellBackground, 7%);

        // Thumbnails
        $thumbnailPadding:              $paddingBaseVertical - 2;
        $thumbnailBg:                   $bodyBg;
        $thumbnailBdColor:              $tableBdColor;
        $thumbnailBdWidth:              $tableBdWidth;
        $thumbnailBdRadius:             0;
        $thumbnailCaptionColor:         $textColor;
        $thumbnailCaptionPadding:       $paddingLargeVertical - 1;

        // Custom Scrollbars
        $scrollBarWidthDefault:         17px; // what most browsers use
        $scrollBarWidthWebkit:          11px; // what most browsers use
        $scrollBarWidthCustom:          $scrollBarWidthWebkit; // what we'd prefer
        $scrollBarWebkit:               "#{$cl}#{$cl}-webkit-scrollbar";
        $scrollBarWebkitThumb:          "#{$scrollBarWebkit}-thumb";
        $scrollBarRadius:               8px;
        $scrollBarBdWidth:              2px;
        $scrollBarBdColor:              $white;
        $scrollBarBg:                   rgba($black, .5);

        // Pagination
        $paginationItemSpacing:         $pillTabSpacing - 1;

        // Page Indicators
        $pageIndicatorSize:             8px;
        $pageIndicatorBg:               $wf_gray_lt4;
        $pageIndicatorBgActive:         $wf_gray_lt;

        // Jumbotron
        $jumbotronBg:                   $grayLighter;
        $jumbotronHeadingColor:         $headingsColor;
        $jumbotronLeadColor:            inherit;

        // Blockquote
        $blockquoteBdWidth:             5px;

        // Carousel
        $carouselTransitionSpeed:   .6s;

        $carouselControlPadding:    16px; // to the left/right of carousel control icon
        $carouselControlIconSize:   $iconLargeSize;
        $carouselControlWidth:      ($carouselControlPadding * 2) + $carouselControlIconSize;
        $carouselControlColor:      $wf_gray_lt5;
        $carouselControlColorHover: $wf_green;

        $carouselCaptionColor:      $wf_gray_dk;

        $carouselPadding:           0 $carouselControlWidth;
        $carouselInnerPadBottom:    75px;


//
// GRID
//
    $gridColumns:            12;
    $gridGutterWidth:        $containerGutterDefault;
    $gridGutterWideWidth:    $containerGutterWide;

    // grid container widths
    $gridContainerMaxWidthTablet:       $screenTablet - ($gridGutterWidth * 2);
    $gridContainerMaxWidthDesktop:      $screenDesktop - ($gridGutterWidth * 2) - 12;
    $gridContainerMaxWidthDesktopLarge: $screenDesktopLarge - ($gridGutterWidth * 2) + 10;
    $gridContainerMaxWidthDesktopHuge:  $screenDesktopHuge - ($gridGutterWidth * 2) + 10;

    // "wide" variant of a grid container (extend to edge of viewport)
    $gridContainerWideMaxWidth:         100%;

    // grid column widths (rough)
    $gridColumnWidthMobile:             round($gridContainerMaxWidthTablet / $gridColumns);
    $gridColumnWidthDesktop:            round($gridContainerMaxWidthDesktop / $gridColumns);
    $gridColumnWidthDesktopLarge:       round($gridContainerMaxWidthDesktopLarge / $gridColumns);
    $gridColumnWidthDesktopHuge:        round($gridContainerMaxWidthDesktopHuge / $gridColumns);

