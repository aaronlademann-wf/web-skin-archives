//----------------------------------------------------

//+  PARTIAL:  _forms-switches.scss
//+  PARENT:   _forms.scss

//----------------------------------------------------

@mixin checked-switch-label {
    background-color: $cboxSwitchBgActive;

    // (TEXT)
    &:before {
        right: auto;
        left: $cboxSwitchTextIndent;
    }

    // (BUTTON)
    &:after {
        right: $cboxSwitchBtnInset;
        left: auto;
    }
}

@mixin unchecked-switch-label {
    background-color: $cboxSwitchBg;

    &:before {
        right: $cboxSwitchTextIndent;
        left: auto;
    }

    &:after {
        right: auto;
        left: $cboxSwitchBtnInset;
    }
}


//
// BASE (SCREEN AND PRINT)
//
    .checkbox-switch {
        display: block;

        .form-inline & {
            display: inline-block;
            @include ie7-inline-block;
        }

        label {
            text-transform: uppercase;
            &:before {
                content: "off";
            }
        }

        input[type="checkbox"] {
            //
            // switch is turned on
            //

            // :checked style has to be it's own un-comma-separated
            // statement in order to make MSIE 8 happy
            &:checked + label:before {
                content: "on";
            }
        }

        // IE 8 doesn't understand :checked
        @include ie('<9') {
            // IE8 just ignores :checked, so it shows all checkboxes as selected
            // unless we reset it here, and re-apply the "selected" styles using .checked
            input[type="checkbox"]:checked + label:before {
                content: "off";
            }
            input[type="checkbox"].checked + label:before,
            input[type="checkbox"][checked] + label:before {
                content: "on";
            }
        }
    }


//
// BASE (SCREEN ONLY)
//
@media screen {
    .checkbox-switch {
        position: relative;
        top: 0;
        left: 0;
        width: $cboxSwitchWidth;
        height: $cboxSwitchHeight;

        // CLICKABLE ELEM
        label {
            position: absolute;
            top: 0;
            left: 0;
            width: $cboxSwitchWidth;
            height: $cboxSwitchHeight;
            font-family: $fontFamilyBase;
            font-weight: normal;
            line-height: $cboxSwitchHeight;
            cursor: pointer;
            background-color: $cboxSwitchBg;
            border-radius: $cboxSwitchBdRadius;

            // (TEXT)
            &:before {
                position: absolute;
                top: 0;
                right: $cboxSwitchTextIndent;
                left: auto;
                z-index: 1;
                display: block;
                height: $cboxSwitchHeight;
                line-height: $cboxSwitchHeight;
                color: contrast-color($cboxSwitchBg);
                text-align: left;
                text-shadow: 1px 1px 0 rgba($black, .2);
            }

            // (BUTTON)
            &:after {
                content: "";
                position: absolute;
                top: $cboxSwitchBtnInset;
                left: $cboxSwitchBtnInset;
                z-index: 2; // keep above labels
                display: block;
                width: $cboxSwitchWidth - $cboxSwitchBgVoid;
                height: $cboxSwitchHeight - ($cboxSwitchBtnInset * 2);
                line-height: $cboxSwitchHeight - ($cboxSwitchBtnInset * 2);
                background-color: $cboxSwitchBtnBg;
                border-radius: $cboxSwitchBdRadius - $cboxSwitchBtnInset;
            }
        }

        input[type="checkbox"] {
            // even though we are hiding it
            // we still want it to inherit the size of its container
            // so the entire area is clickable
            position: absolute;
            right: 0;
            left: 0;
            z-index: 3;
            width: auto;
            height: $cboxSwitchHeight;

            // must hide this to prevent mozilla suckage:
            // https://bugzilla.mozilla.org/show_bug.cgi?id=605985
            padding: 0;
            margin: 0;
            overflow: hidden;
            // use opacity instead of visibility: hidden; in order to allow the inputs to gain :focus
            @include opacity(0);
            .no-touch & {
                // do not use clip() on touch devices because it causes (https://github.com/WebFilings/web-skin/issues/611)
                // but we do need to use it on devices that use a mouse/hover HCI pattern in order to only have
                // to declare our :hover style on the parent .radio/.checkbox
                clip: rect(0,0,0,0);
            }


            //
            // switch is turned on
            //

            // :checked style has to be it's own un-comma-separated
            // statement in order to make MSIE 8 happy
            &:checked + label {
                @include checked-switch-label;
            }
        }

        // IE 8 doesn't understand :checked
        @include ie('<9') {
            // IE8 just ignores :checked, so it shows all checkboxes as selected
            // unless we reset it here, and re-apply the "selected" styles using .checked
            input[type="checkbox"]:checked + label {
                @include unchecked-switch-label;
            }
            input[type="checkbox"].checked + label,
            input[type="checkbox"][checked] + label {
                @include checked-switch-label;
            }
        }
    } // END .checkbox-switch (base)


    //
    // VARIANTS
    //
    .checkbox-switch {

        //
        // SIZE VARIANTS
        //
        &.checkbox-switch-sm {
            @include checkboxSwitchWidth($sizeVariation: "sm");

            &,
            label,
            input {
                height: $cboxSwitchHeightSm;
                line-height: $cboxSwitchHeightSm;
                border-radius: $cboxSwitchBdRadiusSm;
            }

            // (BUTTON)
            label:after {
                border-radius: $cboxSwitchBdRadiusSm - $cboxSwitchBtnInset;
                height: $cboxSwitchHeightSm - ($cboxSwitchBtnInset * 2);
                line-height: $cboxSwitchHeightSm - ($cboxSwitchBtnInset * 2);
            }

            // (TEXT)
            label:before {
                right: $cboxSwitchTextIndentSm;
                height: $cboxSwitchHeightSm;
                line-height: $cboxSwitchHeightSm;
                font-size: $cboxSwitchFontSizeSm;
                font-weight: normal;
            }

            //
            // switch is turned on
            //

            // :checked style has to be it's own un-comma-separated
            // statement in order to make MSIE 8 happy
            input[type="checkbox"]:checked + label:before {
                left: $cboxSwitchTextIndentSm;
            }
            // IE 8 doesn't understand :checked
            @include ie('<9') {
                // IE8 just ignores :checked, so it shows all checkboxes as selected
                // unless we reset it here, and re-apply the "selected" styles using .checked
                input[type="checkbox"]:checked + label:before {
                    right: $cboxSwitchTextIndentSm;
                    left: auto;
                }
                input[type="checkbox"].checked + label:before,
                input[type="checkbox"][checked] + label:before {
                    right: auto;
                    left: $cboxSwitchTextIndentSm;
                }
            }
        } // END .checkbox-switch-sm

        &.checkbox-switch-xs {
            @include checkboxSwitchWidth($sizeVariation: "xs");

            &,
            label,
            input {
                height: $cboxSwitchHeightXs;
                line-height: $cboxSwitchHeightXs;
                border-radius: $cboxSwitchBdRadiusXs;
            }

            // (BUTTON)
            label:after {
                border-radius: $cboxSwitchBdRadiusXs - $cboxSwitchBtnInset;
                height: $cboxSwitchHeightXs - ($cboxSwitchBtnInset * 2);
                line-height: $cboxSwitchHeightXs - ($cboxSwitchBtnInset * 2);
            } // END: .checkbox:after

            // (TEXT)
            label:before {
                right: $cboxSwitchTextIndentXs;
                height: $cboxSwitchHeightXs;
                line-height: $cboxSwitchHeightXs;
                font-size: $cboxSwitchFontSizeXs;
                font-weight: normal;
            }

            //
            // switch is turned on
            //

            // :checked style has to be it's own un-comma-separated
            // statement in order to make MSIE 8 happy
            input[type="checkbox"]:checked + label:before {
                left: $cboxSwitchTextIndentXs;
            }
            // IE 8 doesn't understand :checked
            @include ie('<9') {
                // IE8 just ignores :checked, so it shows all checkboxes as selected
                // unless we reset it here, and re-apply the "selected" styles using .checked
                input[type="checkbox"]:checked + label:before {
                    right: $cboxSwitchTextIndentXs;
                    left: auto;
                }
                input[type="checkbox"].checked + label:before,
                input[type="checkbox"][checked] + label:before {
                    right: auto;
                    left: $cboxSwitchTextIndentXs;
                }
            }
        } // END .checkbox-switch-sm


        //
        // COLOR VARIANTS
        //
        $n: 1 !global;
        @each $state in $states {
            $bgColor: nth($state_btnBgs, $n);
            &.checkbox-switch-#{$state} {
                // :checked style has to be it's own un-comma-separated
                // statement in order to make MSIE 8 happy
                input[type="checkbox"]:checked + label {
                    background-color: $bgColor;
                }
                // IE 8 doesn't understand :checked
                @include ie('<9') {
                    // IE8 just ignores :checked, so it shows all checkboxes as selected
                    // unless we reset it here, and re-apply the "selected" styles using .checked
                    input[type="checkbox"]:checked + label {
                        background-color: $cboxSwitchBg;
                    }
                    input[type="checkbox"].checked + label,
                    input[type="checkbox"][checked] + label {
                        background-color: $bgColor;
                    }
                }
            }
            $n: $n + 1 !global;
        }

    } // END .checkbox-switch (variants)

} // END @media screen